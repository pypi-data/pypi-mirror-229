# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ListTypeEnumValue(str, enum.Enum):
    CONTACTS = "contacts"
    COMPANIES = "companies"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        contacts: typing.Callable[[], T_Result],
        companies: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ListTypeEnumValue.CONTACTS:
            return contacts()
        if self is ListTypeEnumValue.COMPANIES:
            return companies()
        if self is ListTypeEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
