# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class JobPostingStatus(str, enum.Enum):
    LIVE = "live"
    DRAFT = "draft"
    CLOSED = "closed"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        live: typing.Callable[[], T_Result],
        draft: typing.Callable[[], T_Result],
        closed: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is JobPostingStatus.LIVE:
            return live()
        if self is JobPostingStatus.DRAFT:
            return draft()
        if self is JobPostingStatus.CLOSED:
            return closed()
        if self is JobPostingStatus.UNMAPPED_VALUE:
            return unmapped_value()
