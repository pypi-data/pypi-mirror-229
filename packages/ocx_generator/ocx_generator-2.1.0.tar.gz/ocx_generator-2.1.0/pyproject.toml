[project.urls]
"Homepage" = "https://github.com/OCXStandard/ocx-generator"
"Bug Tracker" = "https://github.com/OCXStandard/ocx-generator/issues"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ocx_generator"
version = "2.1.0"
description = "Python CLI for managing OCX schema databinding and versioning according to PEP 440."
authors = ["ocastrup <ole.christian.astrup@dnv.com>"]
readme = "README.md"
packages = [{include = "ocx_generator"}]

[tool.poetry.dependencies]
python = "^3.11"
packaging = "^23.1"
tbump = '*'
xsdata = "*"
click ="*"
lxml = "*"
soap = "*"
typer = "*"
loguru = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-regressions ="*"


[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/OCXStandard/ocx-generator"

[tool.tbump.version]
current = "2.1.0"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (
    (?P<extra>.+)
  )?
  '''


[[tool.tbump.field]]
# the name of the field
name = "extra"
# the default value to use, if there is no match
default = ""

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "./ocx_generator/__init__.py"

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

#[[tool.tbump.before_commit]]
#name = "Insert new xsdata package name"
#cmd = "python generator.py {new_version}"
#
##[[tool.tbump.before_commit]]
##name = "Cd to ./ocx"
##cmd = "cd ./ocx"
##
##[[tool.tbump.before_commit]]
##name = "Generate data-bindings."
##cmd = "xsdata generate OCX_Schema.xsd"
##
##[[tool.tbump.before_commit]]
##name = "Cd to .."
##cmd = "cd .."
#
#[[tool.tbump.before_commit]]
#name = "Add generated files to commit."
#cmd = "git add ./ocx_*"
#
#[[tool.tbump.before_commit]]
#name = "Insert version string in databinding."
#cmd = "python insert_version.py {new_version}"

# Or run some commands after the git tag and the branch
# have been pushed:
[[tool.tbump.after_push]]
name = "build"
cmd = "poetry build"

[[tool.tbump.after_push]]
name = "publish"
cmd = "echo Rememeber to publish new build"
