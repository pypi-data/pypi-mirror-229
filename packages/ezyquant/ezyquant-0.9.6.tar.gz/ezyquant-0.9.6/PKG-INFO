Metadata-Version: 2.1
Name: ezyquant
Version: 0.9.6
Summary: Powerful Python backtesting for Thai stocks
Project-URL: Documentation, https://pydoc.ezyquant.com/
Project-URL: Issues, https://github.com/ezyquant/ezyquant/issues
Project-URL: Source, https://github.com/ezyquant/ezyquant
Author-email: "Fintech (Thailand) Company Limited" <admin@fintech.co.th>
License-Expression: MIT
License-File: LICENSE
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Office/Business :: Financial :: Investment
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Requires-Python: >=3.8
Requires-Dist: ipython
Requires-Dist: pandas>=1.5
Requires-Dist: psycopg2-binary>=2.9
Requires-Dist: python-dotenv>=1.0
Requires-Dist: quantstats>=0.0.62
Requires-Dist: sqlalchemy>=2.0
Requires-Dist: ta>=0.10
Requires-Dist: typing-extensions>=4.4
Requires-Dist: xlsxwriter>=3.0
Provides-Extra: dev
Requires-Dist: black[jupyter]~=23.0; extra == 'dev'
Requires-Dist: coverage[toml]~=7.2; extra == 'dev'
Requires-Dist: docformatter[tomli]~=1.0; extra == 'dev'
Requires-Dist: ezyquant-execution; extra == 'dev'
Requires-Dist: hatch; extra == 'dev'
Requires-Dist: pytest-env~=0.8; extra == 'dev'
Requires-Dist: pytest-kwparametrize~=0.0; extra == 'dev'
Requires-Dist: pytest-xdist[psutil]~=3.0; extra == 'dev'
Requires-Dist: pytest~=7.0; extra == 'dev'
Requires-Dist: ruff~=0.0; extra == 'dev'
Requires-Dist: sphinx-book-theme~=1.0; extra == 'dev'
Requires-Dist: sphinx~=6.2; extra == 'dev'
Description-Content-Type: text/markdown

[![Logo](https://raw.githubusercontent.com/ezyquant/ezyquant/main/docs/source/_static/logo-text-right.svg)](https://pydoc.ezyquant.com/)

# EzyQuant: Powerful Python backtesting for Thai stocks

[![PyPI](https://img.shields.io/pypi/v/ezyquant?label=PyPI)](https://pypi.org/project/ezyquant/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/ezyquant?label=PyPI%20Downloads)](https://pepy.tech/project/ezyquant)
[![License](https://img.shields.io/pypi/l/ezyquant.svg)](https://github.com/ezyquant/ezyquant/blob/main/LICENSE)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Formatter: docformatter](https://img.shields.io/badge/%20formatter-docformatter-fedcba.svg)](https://github.com/PyCQA/docformatter)
[![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)

## Features

- Backtest
- Signal Creator
- Data Reader

## Installation

```bash
pip install ezyquant
```

or

```bash
pip install git+https://github.com/ezyquant/ezyquant
```

## Quick Example

```python
import pandas as pd

import ezyquant as ez
from ezyquant import SETDataReader, backtest
from ezyquant.backtest import Context

ez.connect_sqlite("ezyquant.db")

start_date = "2020-01-01"
end_date = "2020-12-31"
initial_cash = 1e6

# Signal
sdr = SETDataReader()

trade_date_list = sdr.get_trading_dates(start_date, end_date)

signal_df = pd.DataFrame(index=pd.DatetimeIndex(trade_date_list), columns=["AOT"])


def backtest_algorithm(ctx: Context) -> float:
    return 100


# Backtest
report = backtest(
    signal_df=signal_df,
    backtest_algorithm=backtest_algorithm,
    start_date=start_date,
    end_date=end_date,
    initial_cash=initial_cash,
    pct_commission=0.25,
)
```

Backtest report:

```python
                               port_value port_value_with_dividend
pct_net_profit                   0.024916                 0.024916
cagr                             0.025055                 0.025055
pct_maximum_drawdown            -0.223604                -0.223604
cagr_divided_maxdd               0.112052                 0.112052
pct_win_per_trade                     1.0                      1.0
std                               0.32582                  0.32582
cagr_divided_std                 0.076899                 0.076899
pct_exposure                     0.665873                 0.665873
total_commission                  2483.75                  2483.75
initial_capital                 1000000.0                1000000.0
ending_capital                 1024916.25               1024916.25
net_profit                       24916.25                 24916.25
maximum_drawdown              -235340.125              -235340.125
all_trades                              1                        1
avg_profit_loss                  24916.25                 24916.25
pct_avg_profit_loss                   NaN                      NaN
avg_bar_held                        120.0                    120.0
win_trades                              1                        1
total_profit                      22364.0                  22364.0
avg_profit                        22364.0                  22364.0
pct_avg_profit                    0.02251                  0.02251
avg_win_bar_held                    120.0                    120.0
max_win_consecutive                     1                        1
loss_trades                             0                        0
total_loss                            0.0                      0.0
avg_loss                              NaN                      NaN
pct_avg_loss                          NaN                      NaN
avg_lose_bar_held                     NaN                      NaN
max_lose_consecutive                    0                        0
start_date            2020-01-02 00:00:00      2020-01-02 00:00:00
end_date              2020-12-30 00:00:00      2020-12-30 00:00:00
pct_commission                       0.25                     0.25
pct_buy_slip                          0.0                      0.0
pct_sell_slip                         0.0                      0.0
```

You can find more examples in the examples directory.
