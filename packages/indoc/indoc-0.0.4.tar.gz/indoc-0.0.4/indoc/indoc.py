# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_indoc.ipynb.

# %% auto 0
__all__ = ['indoc']

# %% ../nbs/03_indoc.ipynb 4
from abc import abstractmethod
from dataclasses import dataclass, KW_ONLY

# %% ../nbs/03_indoc.ipynb 5
from indoc.utils import (
    make_inheritance_separator,
)

# %% ../nbs/03_indoc.ipynb 6
from .funcs import (inherited_doc)

# %% ../nbs/03_indoc.ipynb 9
def indoc(
    cls,     
    use_footnotes: bool = True,
    label_abstract: bool = True,
    include_dunders: bool = True,
    show_cls_sep: bool = False,
    cls_sep_func: callable = make_inheritance_separator,
):
    cls_w_new_docs = inherited_doc(    
        cls = cls, # the class we are decorating
        show_cls_sep = show_cls_sep,
        cls_sep_func = cls_sep_func,
        use_footnotes = use_footnotes,
        label_abstract = label_abstract,
        include_dunders = include_dunders,
    )
    return cls_w_new_docs
