# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EthnicityEnumValue(str, enum.Enum):
    WHITE = "white"
    BLACK_OR_AFRICAN_AMERICAN = "black_or_african_american"
    ASIAN = "asian"
    HISPANIC_OR_LATINO = "hispanic_or_latino"
    AMERICAN_INDIAN_OR_ALASKA_NATIVE = "american_indian_or_alaska_native"
    NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER = "native_hawaiian_or_pacific_islander"
    TWO_OR_MORE_RACES = "two_or_more_races"
    NOT_DISCLOSED = "not_disclosed"
    OTHER = "other"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        white: typing.Callable[[], T_Result],
        black_or_african_american: typing.Callable[[], T_Result],
        asian: typing.Callable[[], T_Result],
        hispanic_or_latino: typing.Callable[[], T_Result],
        american_indian_or_alaska_native: typing.Callable[[], T_Result],
        native_hawaiian_or_pacific_islander: typing.Callable[[], T_Result],
        two_or_more_races: typing.Callable[[], T_Result],
        not_disclosed: typing.Callable[[], T_Result],
        other: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EthnicityEnumValue.WHITE:
            return white()
        if self is EthnicityEnumValue.BLACK_OR_AFRICAN_AMERICAN:
            return black_or_african_american()
        if self is EthnicityEnumValue.ASIAN:
            return asian()
        if self is EthnicityEnumValue.HISPANIC_OR_LATINO:
            return hispanic_or_latino()
        if self is EthnicityEnumValue.AMERICAN_INDIAN_OR_ALASKA_NATIVE:
            return american_indian_or_alaska_native()
        if self is EthnicityEnumValue.NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER:
            return native_hawaiian_or_pacific_islander()
        if self is EthnicityEnumValue.TWO_OR_MORE_RACES:
            return two_or_more_races()
        if self is EthnicityEnumValue.NOT_DISCLOSED:
            return not_disclosed()
        if self is EthnicityEnumValue.OTHER:
            return other()
        if self is EthnicityEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
