# Generated by Django 4.2.4 on 2023-08-30 00:51

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AdminPurgeComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "admin_purge_comment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AdminPurgeCommunity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "admin_purge_community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AdminPurgePerson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "admin_purge_person",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AdminPurgePost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "admin_purge_post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CaptchaAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("uuid", models.UUIDField(unique=True)),
                ("answer", models.TextField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "captcha_answer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("content", models.TextField()),
                ("removed", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField()),
                ("ap_id", models.CharField(max_length=255, unique=True)),
                ("local", models.BooleanField()),
                ("path", models.TextField()),
                ("distinguished", models.BooleanField()),
            ],
            options={
                "db_table": "comment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommentAggregates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("score", models.BigIntegerField()),
                ("upvotes", models.BigIntegerField()),
                ("downvotes", models.BigIntegerField()),
                ("published", models.DateTimeField()),
                ("child_count", models.IntegerField()),
                ("hot_rank", models.IntegerField()),
            ],
            options={
                "db_table": "comment_aggregates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommentLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("score", models.SmallIntegerField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "comment_like",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommentReply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("read", models.BooleanField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "comment_reply",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("original_comment_text", models.TextField()),
                ("reason", models.TextField()),
                ("resolved", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "comment_report",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommentSaved",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "comment_saved",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Community",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("removed", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField()),
                ("nsfw", models.BooleanField()),
                ("actor_id", models.CharField(max_length=255, unique=True)),
                ("local", models.BooleanField()),
                ("private_key", models.TextField(blank=True, null=True)),
                ("public_key", models.TextField()),
                ("last_refreshed_at", models.DateTimeField()),
                ("icon", models.TextField(blank=True, null=True)),
                ("banner", models.TextField(blank=True, null=True)),
                ("followers_url", models.CharField(max_length=255, unique=True)),
                ("inbox_url", models.CharField(max_length=255, unique=True)),
                ("shared_inbox_url", models.CharField(blank=True, max_length=255, null=True)),
                ("hidden", models.BooleanField()),
                ("posting_restricted_to_mods", models.BooleanField()),
                (
                    "moderators_url",
                    models.CharField(blank=True, max_length=255, null=True, unique=True),
                ),
                (
                    "featured_url",
                    models.CharField(blank=True, max_length=255, null=True, unique=True),
                ),
            ],
            options={
                "db_table": "community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommunityAggregates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("subscribers", models.BigIntegerField()),
                ("posts", models.BigIntegerField()),
                ("comments", models.BigIntegerField()),
                ("published", models.DateTimeField()),
                ("users_active_day", models.BigIntegerField()),
                ("users_active_week", models.BigIntegerField()),
                ("users_active_month", models.BigIntegerField()),
                ("users_active_half_year", models.BigIntegerField()),
                ("hot_rank", models.IntegerField()),
            ],
            options={
                "db_table": "community_aggregates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommunityBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "community_block",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommunityFollower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
                ("pending", models.BooleanField()),
            ],
            options={
                "db_table": "community_follower",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommunityLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
            ],
            options={
                "db_table": "community_language",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommunityModerator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "community_moderator",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommunityPersonBan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
                ("expires", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "community_person_ban",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomEmoji",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("shortcode", models.CharField(max_length=128, unique=True)),
                ("image_url", models.TextField(unique=True)),
                ("alt_text", models.TextField()),
                ("category", models.TextField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "custom_emoji",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomEmojiKeyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("keyword", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "custom_emoji_keyword",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DieselSchemaMigrations",
            fields=[
                ("version", models.CharField(max_length=50, primary_key=True, serialize=False)),
                ("run_on", models.DateTimeField()),
            ],
            options={
                "db_table": "__diesel_schema_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmailVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("email", models.TextField()),
                ("verification_token", models.TextField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "email_verification",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FederationAllowlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "federation_allowlist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FederationBlocklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "federation_blocklist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Instance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("domain", models.CharField(max_length=255, unique=True)),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("software", models.CharField(blank=True, max_length=255, null=True)),
                ("version", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "instance",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("code", models.CharField(max_length=3)),
                ("name", models.TextField()),
            ],
            options={
                "db_table": "language",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocalSite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("site_setup", models.BooleanField()),
                ("enable_downvotes", models.BooleanField()),
                ("enable_nsfw", models.BooleanField()),
                ("community_creation_admin_only", models.BooleanField()),
                ("require_email_verification", models.BooleanField()),
                ("application_question", models.TextField(blank=True, null=True)),
                ("private_instance", models.BooleanField()),
                ("default_theme", models.TextField()),
                ("default_post_listing_type", models.TextField()),
                ("legal_information", models.TextField(blank=True, null=True)),
                ("hide_modlog_mod_names", models.BooleanField()),
                ("application_email_admins", models.BooleanField()),
                ("slur_filter_regex", models.TextField(blank=True, null=True)),
                ("actor_name_max_length", models.IntegerField()),
                ("federation_enabled", models.BooleanField()),
                ("captcha_enabled", models.BooleanField()),
                ("captcha_difficulty", models.CharField(max_length=255)),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("registration_mode", models.TextField()),
                ("reports_email_admins", models.BooleanField()),
            ],
            options={
                "db_table": "local_site",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocalSiteRateLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("message", models.IntegerField()),
                ("message_per_second", models.IntegerField()),
                ("post", models.IntegerField()),
                ("post_per_second", models.IntegerField()),
                ("register", models.IntegerField()),
                ("register_per_second", models.IntegerField()),
                ("image", models.IntegerField()),
                ("image_per_second", models.IntegerField()),
                ("comment", models.IntegerField()),
                ("comment_per_second", models.IntegerField()),
                ("search", models.IntegerField()),
                ("search_per_second", models.IntegerField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "local_site_rate_limit",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocalUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password_encrypted", models.TextField()),
                ("email", models.TextField(blank=True, null=True, unique=True)),
                ("show_nsfw", models.BooleanField()),
                ("theme", models.TextField()),
                ("default_sort_type", models.TextField()),
                ("default_listing_type", models.TextField()),
                ("interface_language", models.CharField(max_length=20)),
                ("show_avatars", models.BooleanField()),
                ("send_notifications_to_email", models.BooleanField()),
                ("validator_time", models.DateTimeField()),
                ("show_scores", models.BooleanField()),
                ("show_bot_accounts", models.BooleanField()),
                ("show_read_posts", models.BooleanField()),
                ("show_new_post_notifs", models.BooleanField()),
                ("email_verified", models.BooleanField()),
                ("accepted_application", models.BooleanField()),
                ("totp_2fa_secret", models.TextField(blank=True, null=True)),
                ("totp_2fa_url", models.TextField(blank=True, null=True)),
                ("open_links_in_new_tab", models.BooleanField()),
                ("infinite_scroll_enabled", models.BooleanField()),
            ],
            options={
                "db_table": "local_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocalUserLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
            ],
            options={
                "db_table": "local_user_language",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModAdd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("removed", models.BooleanField()),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_add",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModAddCommunity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("removed", models.BooleanField()),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_add_community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModBan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("banned", models.BooleanField()),
                ("expires", models.DateTimeField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_ban",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModBanFromCommunity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("banned", models.BooleanField()),
                ("expires", models.DateTimeField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_ban_from_community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModFeaturePost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("featured", models.BooleanField()),
                ("when_field", models.DateTimeField(db_column="when_")),
                ("is_featured_community", models.BooleanField()),
            ],
            options={
                "db_table": "mod_feature_post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModHideCommunity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("when_field", models.DateTimeField(db_column="when_")),
                ("reason", models.TextField(blank=True, null=True)),
                ("hidden", models.BooleanField()),
            ],
            options={
                "db_table": "mod_hide_community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModLockPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField()),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_lock_post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModRemoveComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("removed", models.BooleanField()),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_remove_comment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModRemoveCommunity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("removed", models.BooleanField()),
                ("expires", models.DateTimeField(blank=True, null=True)),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_remove_community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModRemovePost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("removed", models.BooleanField()),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_remove_post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModTransferCommunity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("when_field", models.DateTimeField(db_column="when_")),
            ],
            options={
                "db_table": "mod_transfer_community",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PasswordResetRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("token_encrypted", models.TextField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "password_reset_request",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("display_name", models.CharField(blank=True, max_length=255, null=True)),
                ("avatar", models.TextField(blank=True, null=True)),
                ("banned", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("actor_id", models.CharField(max_length=255, unique=True)),
                ("bio", models.TextField(blank=True, null=True)),
                ("local", models.BooleanField()),
                ("private_key", models.TextField(blank=True, null=True)),
                ("public_key", models.TextField()),
                ("last_refreshed_at", models.DateTimeField()),
                ("banner", models.TextField(blank=True, null=True)),
                ("deleted", models.BooleanField()),
                ("inbox_url", models.CharField(max_length=255, unique=True)),
                ("shared_inbox_url", models.CharField(blank=True, max_length=255, null=True)),
                ("matrix_user_id", models.TextField(blank=True, null=True)),
                ("admin", models.BooleanField()),
                ("bot_account", models.BooleanField()),
                ("ban_expires", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "person",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PersonAggregates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("post_count", models.BigIntegerField()),
                ("post_score", models.BigIntegerField()),
                ("comment_count", models.BigIntegerField()),
                ("comment_score", models.BigIntegerField()),
            ],
            options={
                "db_table": "person_aggregates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PersonBan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "person_ban",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PersonBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "person_block",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PersonFollower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
                ("pending", models.BooleanField()),
            ],
            options={
                "db_table": "person_follower",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PersonMention",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("read", models.BooleanField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "person_mention",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PersonPostAggregates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("read_comments", models.BigIntegerField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "person_post_aggregates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("url", models.CharField(blank=True, max_length=512, null=True)),
                ("body", models.TextField(blank=True, null=True)),
                ("removed", models.BooleanField()),
                ("locked", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField()),
                ("nsfw", models.BooleanField()),
                ("embed_title", models.TextField(blank=True, null=True)),
                ("embed_description", models.TextField(blank=True, null=True)),
                ("thumbnail_url", models.TextField(blank=True, null=True)),
                ("ap_id", models.CharField(max_length=255, unique=True)),
                ("local", models.BooleanField()),
                ("embed_video_url", models.TextField(blank=True, null=True)),
                ("featured_community", models.BooleanField()),
                ("featured_local", models.BooleanField()),
            ],
            options={
                "db_table": "post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PostAggregates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("comments", models.BigIntegerField()),
                ("score", models.BigIntegerField()),
                ("upvotes", models.BigIntegerField()),
                ("downvotes", models.BigIntegerField()),
                ("published", models.DateTimeField()),
                ("newest_comment_time_necro", models.DateTimeField()),
                ("newest_comment_time", models.DateTimeField()),
                ("featured_community", models.BooleanField()),
                ("featured_local", models.BooleanField()),
                ("hot_rank", models.IntegerField()),
                ("hot_rank_active", models.IntegerField()),
            ],
            options={
                "db_table": "post_aggregates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PostLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("score", models.SmallIntegerField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "post_like",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PostRead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "post_read",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PostReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("original_post_name", models.CharField(max_length=200)),
                ("original_post_url", models.TextField(blank=True, null=True)),
                ("original_post_body", models.TextField(blank=True, null=True)),
                ("reason", models.TextField()),
                ("resolved", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "post_report",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PostSaved",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "post_saved",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrivateMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("content", models.TextField()),
                ("deleted", models.BooleanField()),
                ("read", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("ap_id", models.CharField(max_length=255, unique=True)),
                ("local", models.BooleanField()),
            ],
            options={
                "db_table": "private_message",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrivateMessageReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("original_pm_text", models.TextField()),
                ("reason", models.TextField()),
                ("resolved", models.BooleanField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "private_message_report",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReceivedActivity",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ap_id", models.TextField(unique=True)),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "received_activity",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RegistrationApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("answer", models.TextField()),
                ("deny_reason", models.TextField(blank=True, null=True)),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "registration_application",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Secret",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("jwt_secret", models.CharField()),
            ],
            options={
                "db_table": "secret",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SentActivity",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ap_id", models.TextField(unique=True)),
                ("data", models.TextField()),
                ("sensitive", models.BooleanField()),
                ("published", models.DateTimeField()),
            ],
            options={
                "db_table": "sent_activity",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
                ("sidebar", models.TextField(blank=True, null=True)),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("icon", models.TextField(blank=True, null=True)),
                ("banner", models.TextField(blank=True, null=True)),
                ("description", models.CharField(blank=True, max_length=150, null=True)),
                ("actor_id", models.CharField(max_length=255, unique=True)),
                ("last_refreshed_at", models.DateTimeField()),
                ("inbox_url", models.CharField(max_length=255)),
                ("private_key", models.TextField(blank=True, null=True)),
                ("public_key", models.TextField()),
            ],
            options={
                "db_table": "site",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SiteAggregates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("users", models.BigIntegerField()),
                ("posts", models.BigIntegerField()),
                ("comments", models.BigIntegerField()),
                ("communities", models.BigIntegerField()),
                ("users_active_day", models.BigIntegerField()),
                ("users_active_week", models.BigIntegerField()),
                ("users_active_month", models.BigIntegerField()),
                ("users_active_half_year", models.BigIntegerField()),
            ],
            options={
                "db_table": "site_aggregates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SiteLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
            ],
            options={
                "db_table": "site_language",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Tagline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("content", models.TextField()),
                ("published", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "tagline",
                "managed": False,
            },
        ),
    ]
