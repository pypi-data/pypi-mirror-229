# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EmploymentTypeEnumValue(str, enum.Enum):
    FULL_TIME = "full_time"
    PART_TIME = "part_time"
    CONTRACTOR = "contractor"
    INTERN = "intern"
    PERMANENT = "permanent"
    APPRENTICE = "apprentice"
    FREELANCE = "freelance"
    TERMINATED = "terminated"
    TEMPORARY = "temporary"
    SEASONAL = "seasonal"
    VOLUNTEER = "volunteer"
    PROBATION = "probation"
    INTERNAL = "internal"
    EXTERNAL = "external"
    EMPLOYER_OF_RECORD = "employer_of_record"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        full_time: typing.Callable[[], T_Result],
        part_time: typing.Callable[[], T_Result],
        contractor: typing.Callable[[], T_Result],
        intern: typing.Callable[[], T_Result],
        permanent: typing.Callable[[], T_Result],
        apprentice: typing.Callable[[], T_Result],
        freelance: typing.Callable[[], T_Result],
        terminated: typing.Callable[[], T_Result],
        temporary: typing.Callable[[], T_Result],
        seasonal: typing.Callable[[], T_Result],
        volunteer: typing.Callable[[], T_Result],
        probation: typing.Callable[[], T_Result],
        internal: typing.Callable[[], T_Result],
        external: typing.Callable[[], T_Result],
        employer_of_record: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EmploymentTypeEnumValue.FULL_TIME:
            return full_time()
        if self is EmploymentTypeEnumValue.PART_TIME:
            return part_time()
        if self is EmploymentTypeEnumValue.CONTRACTOR:
            return contractor()
        if self is EmploymentTypeEnumValue.INTERN:
            return intern()
        if self is EmploymentTypeEnumValue.PERMANENT:
            return permanent()
        if self is EmploymentTypeEnumValue.APPRENTICE:
            return apprentice()
        if self is EmploymentTypeEnumValue.FREELANCE:
            return freelance()
        if self is EmploymentTypeEnumValue.TERMINATED:
            return terminated()
        if self is EmploymentTypeEnumValue.TEMPORARY:
            return temporary()
        if self is EmploymentTypeEnumValue.SEASONAL:
            return seasonal()
        if self is EmploymentTypeEnumValue.VOLUNTEER:
            return volunteer()
        if self is EmploymentTypeEnumValue.PROBATION:
            return probation()
        if self is EmploymentTypeEnumValue.INTERNAL:
            return internal()
        if self is EmploymentTypeEnumValue.EXTERNAL:
            return external()
        if self is EmploymentTypeEnumValue.EMPLOYER_OF_RECORD:
            return employer_of_record()
        if self is EmploymentTypeEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
