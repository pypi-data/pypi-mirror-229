# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .campaign_channels_item import CampaignChannelsItem
from .message import Message


class Campaign(pydantic.BaseModel):
    id: typing.Optional[str]
    name: str
    created_at: typing.Optional[str]
    updated_at: typing.Optional[str]
    description: typing.Optional[str]
    archived: typing.Optional[bool]
    draft: typing.Optional[bool]
    channels: typing.Optional[typing.List[CampaignChannelsItem]]
    first_sent_at: typing.Optional[str]
    last_sent_at: typing.Optional[str]
    tags: typing.Optional[typing.List[str]]
    messages: typing.Optional[typing.List[Message]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
