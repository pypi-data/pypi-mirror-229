"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sanctumlabs.messageschema.events.envelope.v1.envelope_pb2
import sanctumlabs.messageschema.events.notifications.email.v1.events_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class EmailV1(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_FIELDS_FIELD_NUMBER: builtins.int
    EMAIL_RECEIVED_FIELD_NUMBER: builtins.int
    EMAIL_SUBMITTED_FIELD_NUMBER: builtins.int
    EMAIL_SENT_FIELD_NUMBER: builtins.int
    @property
    def event_fields(self) -> sanctumlabs.messageschema.events.envelope.v1.envelope_pb2.EventFields: ...
    @property
    def email_received(self) -> sanctumlabs.messageschema.events.notifications.email.v1.events_pb2.EmailReceived: ...
    @property
    def email_submitted(self) -> sanctumlabs.messageschema.events.notifications.email.v1.events_pb2.EmailSubmitted: ...
    @property
    def email_sent(self) -> sanctumlabs.messageschema.events.notifications.email.v1.events_pb2.EmailSent: ...
    def __init__(
        self,
        *,
        event_fields: sanctumlabs.messageschema.events.envelope.v1.envelope_pb2.EventFields | None = ...,
        email_received: sanctumlabs.messageschema.events.notifications.email.v1.events_pb2.EmailReceived | None = ...,
        email_submitted: sanctumlabs.messageschema.events.notifications.email.v1.events_pb2.EmailSubmitted | None = ...,
        email_sent: sanctumlabs.messageschema.events.notifications.email.v1.events_pb2.EmailSent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["email_received", b"email_received", "email_sent", b"email_sent", "email_submitted", b"email_submitted", "event_fields", b"event_fields", "payload", b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["email_received", b"email_received", "email_sent", b"email_sent", "email_submitted", b"email_submitted", "event_fields", b"event_fields", "payload", b"payload"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["payload", b"payload"]) -> typing_extensions.Literal["email_received", "email_submitted", "email_sent"] | None: ...

global___EmailV1 = EmailV1
