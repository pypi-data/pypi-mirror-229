# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .employment_schedule_type_enum import EmploymentScheduleTypeEnum
from .employment_type_enum import EmploymentTypeEnum
from .pay_frequency_enum import PayFrequencyEnum
from .pay_period_enum import PayPeriodEnum


class Employment(pydantic.BaseModel):
    id: typing.Optional[str] = pydantic.Field(description="The unique ID of the employment")
    employee_id: str = pydantic.Field(description="The employee ID associated with this employment")
    job_title: typing.Optional[str] = pydantic.Field(description="The job title of the employee")
    pay_rate: typing.Optional[str] = pydantic.Field(description="The pay rate for the employee")
    pay_period: typing.Optional[PayPeriodEnum] = pydantic.Field(description="The pay period")
    pay_frequency: typing.Optional[PayFrequencyEnum] = pydantic.Field(description="The pay frequency")
    pay_currency: typing.Optional[str] = pydantic.Field(description="The currency used for pay")
    effective_date: typing.Optional[dt.datetime] = pydantic.Field(
        description="The effective date of the employment contract"
    )
    employment_type: typing.Optional[EmploymentTypeEnum] = pydantic.Field(
        description="The type of employment (e.g., contractor, permanent)"
    )
    employment_contract_type: typing.Optional[EmploymentScheduleTypeEnum] = pydantic.Field(
        description="The employment work schedule type (e.g., full-time, part-time)"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
