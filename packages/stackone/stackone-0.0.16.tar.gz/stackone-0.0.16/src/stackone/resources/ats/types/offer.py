# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .offer_history import OfferHistory
from .offer_status_enum_api_model import OfferStatusEnumApiModel


class Offer(pydantic.BaseModel):
    id: str
    application_id: str
    start_date: dt.datetime
    offer_status: OfferStatusEnumApiModel
    salary: typing.Optional[float]
    currency: typing.Optional[str]
    created_at: typing.Optional[str]
    updated_at: typing.Optional[str]
    offer_history: typing.Optional[typing.List[OfferHistory]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
