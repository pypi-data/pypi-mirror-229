from enum import Enum


class ConfigKeys(str, Enum):
    # Note: The values of these must correspond to
    # those used in the ert config, unless we make
    # the keys match up and set logic checking
    # config keys against strings (e.g., in check_required)
    # to use only names
    # These keys are used as options in KEY:VALUE statements
    BASE_SURFACE = "BASE_SURFACE"
    DEFINE = "DEFINE"
    FORWARD_INIT = "FORWARD_INIT"
    GENERAL = "GENERAL"
    INCLUDE = "INCLUDE"
    INIT_FILES = "INIT_FILES"
    INIT_TRANSFORM = "INIT_TRANSFORM"
    INPUT_FORMAT = "INPUT_FORMAT"
    INPUT_TRANSFORM = "INPUT_TRANSFORM"
    MAX = "MAX"
    MIN = "MIN"
    OUTPUT_FILE = "OUTPUT_FILE"
    OUTPUT_TRANSFORM = "OUTPUT_TRANSFORM"
    PARAMETER = "PARAMETER"
    REPORT_STEPS = "REPORT_STEPS"
    RESULT_FILE = "RESULT_FILE"
    TEMPLATE = "TEMPLATE"
    ANALYSIS_COPY = "ANALYSIS_COPY"
    ANALYSIS_SET_VAR = "ANALYSIS_SET_VAR"
    ANALYSIS_SELECT = "ANALYSIS_SELECT"
    DATA_ROOT = "DATA_ROOT"
    DATA_FILE = "DATA_FILE"
    DATA_KW = "DATA_KW"
    ECLBASE = "ECLBASE"
    ENKF_ALPHA = "ENKF_ALPHA"
    ENSPATH = "ENSPATH"
    ITER_CASE = "ITER_CASE"
    ITER_COUNT = "ITER_COUNT"
    ITER_RETRY_COUNT = "ITER_RETRY_COUNT"
    FIELD = "FIELD"
    FORWARD_MODEL = "FORWARD_MODEL"
    GEN_DATA = "GEN_DATA"
    GEN_KW = "GEN_KW"
    GEN_KW_EXPORT_NAME = "GEN_KW_EXPORT_NAME"
    GRID = "GRID"
    HISTORY_SOURCE = "HISTORY_SOURCE"
    INSTALL_JOB = "INSTALL_JOB"
    INSTALL_JOB_DIRECTORY = "INSTALL_JOB_DIRECTORY"
    JOB_SCRIPT = "JOB_SCRIPT"
    JOBNAME = "JOBNAME"
    LICENSE_PATH = "LICENSE_PATH"
    MAX_SUBMIT = "MAX_SUBMIT"
    NUM_REALIZATIONS = "NUM_REALIZATIONS"
    MIN_REALIZATIONS = "MIN_REALIZATIONS"
    OBS_CONFIG = "OBS_CONFIG"
    QUEUE_SYSTEM = "QUEUE_SYSTEM"
    QUEUE_OPTION = "QUEUE_OPTION"
    HOOK_WORKFLOW = "HOOK_WORKFLOW"
    REFCASE = "REFCASE"
    RUNMODE = "RUNMODE"
    RUNPATH_FILE = "RUNPATH_FILE"
    RUNPATH = "RUNPATH"
    RUN_TEMPLATE = "RUN_TEMPLATE"
    SCHEDULE_PREDICTION_FILE = "SCHEDULE_PREDICTION_FILE"
    SETENV = "SETENV"
    SIMULATION_JOB = "SIMULATION_JOB"
    STD_CUTOFF = "STD_CUTOFF"
    SUMMARY = "SUMMARY"
    SURFACE = "SURFACE"
    UPDATE_LOG_PATH = "UPDATE_LOG_PATH"
    UPDATE_PATH = "UPDATE_PATH"
    RANDOM_SEED = "RANDOM_SEED"
    WORKFLOW_JOB_DIRECTORY = "WORKFLOW_JOB_DIRECTORY"
    LOAD_WORKFLOW = "LOAD_WORKFLOW"
    LOAD_WORKFLOW_JOB = "LOAD_WORKFLOW_JOB"
    STOP_LONG_RUNNING = "STOP_LONG_RUNNING"
    MAX_RUNTIME = "MAX_RUNTIME"
    TIME_MAP = "TIME_MAP"
    UPDATE_SETTING = "UPDATE_SETTINGS"
    NUM_CPU = "NUM_CPU"

    CONFIG_DIRECTORY = "CONFIG_DIRECTORY"

    SLURM_SBATCH_OPTION = "SBATCH"
    SLURM_SCANCEL_OPTION = "SCANCEL"
    SLURM_SCONTROL_OPTION = "SCONTROL"
    SLURM_SQUEUE_OPTION = "SQUEUE"
    SLURM_PARTITION_OPTION = "PARTITION"
    SLURM_SQUEUE_TIMEOUT_OPTION = "SQUEUE_TIMEOUT"

    # Observe that the SLURM_MAX_RUNTIME_OPTION expects a time limit in seconds,
    # whereas slurm uses a time limit in minutes
    SLURM_MAX_RUNTIME_OPTION = "MAX_RUNTIME"
    SLURM_MEMORY_OPTION = "MEMORY"
    SLURM_MEMORY_PER_CPU_OPTION = "MEMORY_PER_CPU"

    # For the EXCLUDE and INCLUDE host options the slurm driver
    # maintains an internal list of hostnames, and the option can be called
    # repeatedly. It is possible to add multiple hosts separated by space or comma
    # in one option call:
    #
    # QUEUE_OPTION SLURM EXCLUDE_HOST host1,host2,host3
    # QUEUE_OPTION SLURM EXCLUDE_HOST host5 host6,host7
    SLURM_EXCLUDE_HOST_OPTION = "EXCLUDE_HOST"
    SLURM_INCLUDE_HOST_OPTION = "INCLUDE_HOST"


class ConfigArgAtIndex(str, Enum):
    pass


class RunModes(ConfigArgAtIndex):
    RUN_MODE_PRE_SIMULATION_NAME = "PRE_SIMULATION"
    RUN_MODE_POST_SIMULATION_NAME = "POST_SIMULATION"
    RUN_MODE_PRE_UPDATE_NAME = "PRE_UPDATE"
    RUN_MODE_POST_UPDATE_NAME = "POST_UPDATE"
    RUN_MODE_PRE_FIRST_UPDATE_NAME = "PRE_FIRST_UPDATE"


class QueueOptions(ConfigArgAtIndex):
    LSF = "LSF"
    LOCAL = "LOCAL"
    TORQUE = "TORQUE"
    SLURM = "SLURM"
