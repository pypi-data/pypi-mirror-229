# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .agent_type import AgentType


class AppLibModelsResponseAgent(pydantic.BaseModel):
    id: str
    description: typing.Optional[str]
    avatar_url: typing.Optional[str] = pydantic.Field(alias="avatarUrl")
    shareable_token: typing.Optional[str] = pydantic.Field(alias="shareableToken")
    user_id: str = pydantic.Field(alias="userId")
    document_id: typing.Optional[str] = pydantic.Field(alias="documentId")
    tool_id: typing.Optional[str] = pydantic.Field(alias="toolId")
    tags: typing.Optional[typing.List[typing.Dict[str, typing.Any]]]
    prompt_id: typing.Optional[str] = pydantic.Field(alias="promptId")
    prompt: typing.Optional[typing.Dict[str, typing.Any]]
    name: str
    type: AgentType
    llm: typing.Dict[str, typing.Any]
    has_memory: bool = pydantic.Field(alias="hasMemory")
    is_public: bool = pydantic.Field(alias="isPublic")
    is_listed: bool = pydantic.Field(alias="isListed")
    created_at: typing.Optional[dt.datetime] = pydantic.Field(alias="createdAt")
    updated_at: typing.Optional[dt.datetime] = pydantic.Field(alias="updatedAt")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
