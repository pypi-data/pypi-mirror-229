# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MessageTypeEnumValue(str, enum.Enum):
    EMAIL = "email"
    SMS = "sms"
    WEB_PUSH = "web_push"
    IOS_PUSH = "ios_push"
    ANDROID_PUSH = "android_push"
    APP_PUSH = "app_push"
    OMNI_CHANNEL = "omni_channel"
    UNKNOWN = "unknown"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        email: typing.Callable[[], T_Result],
        sms: typing.Callable[[], T_Result],
        web_push: typing.Callable[[], T_Result],
        ios_push: typing.Callable[[], T_Result],
        android_push: typing.Callable[[], T_Result],
        app_push: typing.Callable[[], T_Result],
        omni_channel: typing.Callable[[], T_Result],
        unknown: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MessageTypeEnumValue.EMAIL:
            return email()
        if self is MessageTypeEnumValue.SMS:
            return sms()
        if self is MessageTypeEnumValue.WEB_PUSH:
            return web_push()
        if self is MessageTypeEnumValue.IOS_PUSH:
            return ios_push()
        if self is MessageTypeEnumValue.ANDROID_PUSH:
            return android_push()
        if self is MessageTypeEnumValue.APP_PUSH:
            return app_push()
        if self is MessageTypeEnumValue.OMNI_CHANNEL:
            return omni_channel()
        if self is MessageTypeEnumValue.UNKNOWN:
            return unknown()
        if self is MessageTypeEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
