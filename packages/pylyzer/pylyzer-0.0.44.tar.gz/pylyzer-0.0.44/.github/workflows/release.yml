name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  cargo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cargo-publish
        run: |
          rustup update stable
          cargo login ${{ secrets.CARGO_TOKEN }}
          chmod +x cargo_publish.sh
          ./cargo_publish.sh --cargo-only
  pypi:
    strategy:
      matrix:
        include:
          # - target: armv7-unknown-linux-gnueabihf
          #   os: ubuntu-latest
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          # - target: aarch64-apple-darwin
          #   os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          # - target: i686-pc-windows-msvc
          #   os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: setup-tools
        run: |
          rustup update stable
          rustup target add ${{ matrix.target }}
          pip3 install maturin
      - name: upload
        run: |
          maturin publish -u mtshiba -p ${{ secrets.PYPI_PASSWORD }} --target ${{ matrix.target }} --skip-existing
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: update-rustup
        run: rustup update stable
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pylyzer
          target: ${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # static linking to libc
          RUSTFLAGS: ${{ (matrix.target == 'x86_64-unknown-linux-gnu' && '-C target-feature=+crt-static') || '' }}
