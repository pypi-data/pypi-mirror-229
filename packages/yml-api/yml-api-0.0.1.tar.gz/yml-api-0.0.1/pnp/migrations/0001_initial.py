# Generated by Django 4.2.4 on 2023-08-09 00:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pnp.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('justificar', models.BooleanField(blank=True, verbose_name='Requer Justificativa')),
            ],
            options={
                'verbose_name': 'Ação',
                'verbose_name_plural': 'Açoes',
            },
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=20, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', models.CharField(db_index=True, max_length=16, null=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(max_length=1, verbose_name='Sexo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
            },
        ),
        migrations.CreateModel(
            name='AreaCNPq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=15, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Área CNPq',
                'verbose_name_plural': 'Áreas CNPq',
            },
        ),
        migrations.CreateModel(
            name='Arquivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_linhas', models.IntegerField(verbose_name='Número de Linhas')),
                ('registros_ativos_identificados', models.BooleanField(default=False, verbose_name='Registros Ativos Identificados')),
                ('data_processamento', models.DateTimeField(null=True, verbose_name='Data do Processamento')),
                ('total_processado', models.IntegerField(default=0, verbose_name='Número de Linhas Processadas com Sucesso')),
                ('arquivo', models.FileField(null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='ArquivoExportacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('data', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data')),
                ('arquivo', models.FileField(null=True, upload_to='arquivos_exportacao')),
            ],
            options={
                'verbose_name': 'Arquivo de Exportação',
                'verbose_name_plural': 'Arquivos de Exportação',
            },
        ),
        migrations.CreateModel(
            name='CargoEmprego',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
            },
        ),
        migrations.CreateModel(
            name='Ciclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('codigo', models.CharField(db_index=True, max_length=36, verbose_name='Código')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('vagas', models.IntegerField(verbose_name='Vagas')),
                ('ingressantes', models.IntegerField(verbose_name='Ingressantes')),
                ('inscritos', models.IntegerField(verbose_name='Inscritos')),
                ('evadidos', models.IntegerField(verbose_name='Evadidos')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(verbose_name='Data da Atualização')),
                ('excluido', models.BooleanField(default=False, verbose_name='Excluído')),
                ('sg_etec', models.CharField(max_length=3, verbose_name='ETEC')),
                ('carga_horaria', models.IntegerField(help_text='Em horas', verbose_name='Carga Horária')),
                ('justificativa_evasao_zero_aceita', models.BooleanField(null=True, verbose_name='Justificativa da Evasão 0% Aceita')),
                ('justificativa_carga_horaria_aceita', models.BooleanField(null=True, verbose_name='Justificativa da Carga-Horária Aceita')),
                ('justificativa_duracao_impropria_aceita', models.BooleanField(null=True, verbose_name='Justificativa da Duração Aceita')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Ciclo',
                'verbose_name_plural': 'Ciclos',
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='Configuracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField(verbose_name='Ano')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('data_envio', models.DateField(blank=True, null=True, verbose_name='Data de Envio')),
            ],
            options={
                'verbose_name': 'Configuração',
                'verbose_name_plural': 'Configurações',
            },
        ),
        migrations.CreateModel(
            name='Cota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(max_length=255, verbose_name='Sigla')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Cota',
                'verbose_name_plural': 'Descrições das Cotas',
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=36, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
                ('excluido', models.BooleanField(default=False, verbose_name='Excluído')),
                ('justificativa_nome_aceita', models.BooleanField(null=True, verbose_name='Justificativa do Nome Aceita')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Eixo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=2, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Eixo',
                'verbose_name_plural': 'Eixos',
            },
        ),
        migrations.CreateModel(
            name='Escolaridade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Escolaridade',
                'verbose_name_plural': 'Escolaridades',
            },
        ),
        migrations.CreateModel(
            name='FaixaRenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Faixa de Renda',
                'verbose_name_plural': 'Faixas de Renda',
            },
        ),
        migrations.CreateModel(
            name='GrupoCargoEmprego',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('categoria', models.CharField(choices=[['T', 'Técnico Administrativo'], ['D', 'Docente']], default='T', max_length=255, null=True, verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Grupo do Cargo',
                'verbose_name_plural': 'Grupos dos Cargos',
            },
        ),
        migrations.CreateModel(
            name='HistoricoSincronizacaoSistec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('historico', models.TextField(verbose_name='Histórico')),
            ],
            options={
                'verbose_name': 'Histório de Sincroninação SISTEC',
                'verbose_name_plural': 'Histório de Sincroninação SISTEC',
            },
        ),
        migrations.CreateModel(
            name='Instituicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('sigla', models.CharField(max_length=25, verbose_name='Sigla')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Instituição',
                'verbose_name_plural': 'Instituições',
            },
        ),
        migrations.CreateModel(
            name='JornadaTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Jornada de Trabalho',
                'verbose_name_plural': 'Jornadas de Trabalho',
            },
        ),
        migrations.CreateModel(
            name='Justificativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justificativa', models.CharField(max_length=255, verbose_name='Justificativa')),
            ],
            options={
                'verbose_name': 'Justificativa',
                'verbose_name_plural': 'Justificativas',
            },
        ),
        migrations.CreateModel(
            name='Mesorregiao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Mesorregião',
                'verbose_name_plural': 'Mesorregiões',
            },
        ),
        migrations.CreateModel(
            name='Microrregiao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
                ('mesorregiao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.mesorregiao', verbose_name='Mesorregião')),
            ],
            options={
                'verbose_name': 'Microrregião',
                'verbose_name_plural': 'Microrregiões',
            },
        ),
        migrations.CreateModel(
            name='Modalidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Modalidade',
                'verbose_name_plural': 'Modalidades',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=7, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
                ('microrregiao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.microrregiao', verbose_name='Microrregião')),
            ],
            options={
                'verbose_name': 'Município',
                'verbose_name_plural': 'Municípios',
            },
        ),
        migrations.CreateModel(
            name='NivelEnsino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=1, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('nivel_verticalizacao', models.CharField(max_length=1, verbose_name='Nível de Verticalização')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Nível de Ensino',
                'verbose_name_plural': 'Níveis de Ensino',
            },
        ),
        migrations.CreateModel(
            name='NivelEnsinoServidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Nível de Ensino de Servidor',
                'verbose_name_plural': 'Níveis de Ensino dos Servidores',
            },
        ),
        migrations.CreateModel(
            name='PalavrasReservadas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singular', models.CharField(max_length=255, verbose_name='Singular')),
                ('plural', models.CharField(max_length=255, verbose_name='Plural')),
            ],
            options={
                'verbose_name': 'Palavras Reservadas',
                'verbose_name_plural': 'Palavras Reservadas',
            },
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=16, null=True, verbose_name='CPF')),
                ('email', models.EmailField(max_length=100, null=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefone')),
                ('capacitacao_concluida', models.BooleanField(default=False, verbose_name='Capacitação Concluída')),
                ('cadastro_ativo', models.BooleanField(default=True, verbose_name='Cadastro Ativo')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
            },
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
            },
        ),
        migrations.CreateModel(
            name='Raca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Raça',
                'verbose_name_plural': 'Raças',
            },
        ),
        migrations.CreateModel(
            name='Rsc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(db_index=True, max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'RSC',
                'verbose_name_plural': 'RSCs',
            },
        ),
        migrations.CreateModel(
            name='SituacaoInconsistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Situação de Inconsistência',
                'verbose_name_plural': 'Situações de Inconsistência',
            },
        ),
        migrations.CreateModel(
            name='SituacaoMatricula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=25, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Situação de Matrícula',
                'verbose_name_plural': 'Situações de Matrícula',
            },
        ),
        migrations.CreateModel(
            name='SituacaoServidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Situação do Servidor',
                'verbose_name_plural': 'Situações dos Servidores',
            },
        ),
        migrations.CreateModel(
            name='SubEixo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=4, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Sub-eixo',
                'verbose_name_plural': 'Sub-eixos',
            },
        ),
        migrations.CreateModel(
            name='TipoCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=4, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('fator', models.DecimalField(decimal_places=6, max_digits=9, max_length=4, null=True, verbose_name='Fator')),
                ('nivel_verticalizacao', models.CharField(max_length=1, null=True, verbose_name='Nível de Verticalização')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
                ('duracao_minima', models.IntegerField(blank=True, help_text='Em dias. Ex: 365 (1 ano).', null=True, verbose_name='Duração Mímina')),
                ('duracao_maxima', models.IntegerField(blank=True, help_text='Em dias. Ex: 365 (1 ano).', null=True, verbose_name='Duração Máxima')),
            ],
            options={
                'verbose_name': 'Tipo de Curso',
                'verbose_name_plural': 'Tipos de Curso',
            },
        ),
        migrations.CreateModel(
            name='TipoErroCarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de Erro de Carga',
                'verbose_name_plural': 'Tipos de Erros de Carga',
            },
        ),
        migrations.CreateModel(
            name='TipoInconsistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('escopo', models.CharField(choices=[['Curso', 'Curso'], ['Ciclo', 'Ciclo'], ['Matrícula', 'Matrícula'], ['Unidade Organizacional', 'Unidade Organizacional'], ['Servidor', 'Servidor']], max_length=255, null=True, verbose_name='Escopo')),
            ],
            options={
                'verbose_name': 'Tipo de Inconsistência',
                'verbose_name_plural': 'Tipos de Inconsistência',
            },
        ),
        migrations.CreateModel(
            name='TipoInstituicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Tipo de Instituição',
                'verbose_name_plural': 'Tipos de Instituição',
            },
        ),
        migrations.CreateModel(
            name='TipoOferta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de Oferta',
                'verbose_name_plural': 'Tipos de Oferta',
            },
        ),
        migrations.CreateModel(
            name='TipoUnidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
            ],
            options={
                'verbose_name': 'Tipo de Unidade',
                'verbose_name_plural': 'Tipos de Unidade',
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
            },
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('caracteristica', models.CharField(blank=True, max_length=255, null=True, verbose_name='Característica')),
                ('periodo_criacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Período da Criação')),
                ('codigo_inep', models.CharField(max_length=10, null=True, verbose_name='Código INEP')),
                ('codigo_simec', models.CharField(max_length=10, null=True, verbose_name='Código SIMEC')),
                ('codigo_sistec', models.CharField(db_index=True, max_length=10, null=True, verbose_name='Código SISTEC')),
                ('sigla', models.CharField(blank=True, max_length=25, null=True, verbose_name='Sigla')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
                ('executores_academicos', models.ManyToManyField(blank=True, related_name='unidades_executadas', to='pnp.pessoa', verbose_name='Executores Acadêmicos')),
                ('instituicao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.instituicao', verbose_name='Instituição')),
                ('municipio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.municipio', verbose_name='Município')),
                ('registradores_academicos', models.ManyToManyField(blank=True, related_name='unidades_registradas', to='pnp.pessoa', verbose_name='Registradores Acadêmicos')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.tipounidade', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Unidade',
                'verbose_name_plural': 'Unidades',
            },
        ),
        migrations.CreateModel(
            name='VagasCiclo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vagas_regulares_ac', models.IntegerField(null=True, verbose_name='Vagas Ampla Concorrência')),
                ('vagas_regulares_l1', models.IntegerField(null=True, verbose_name='Vagas L1')),
                ('vagas_regulares_l2', models.IntegerField(null=True, verbose_name='Vagas L2')),
                ('vagas_regulares_l5', models.IntegerField(null=True, verbose_name='Vagas L5')),
                ('vagas_regulares_l6', models.IntegerField(null=True, verbose_name='Vagas L6')),
                ('vagas_regulares_l9', models.IntegerField(null=True, verbose_name='Vagas L9')),
                ('vagas_regulares_l10', models.IntegerField(null=True, verbose_name='Vagas L10')),
                ('vagas_regulares_l13', models.IntegerField(null=True, verbose_name='Vagas L13')),
                ('vagas_regulares_l14', models.IntegerField(null=True, verbose_name='Vagas L14')),
                ('vagas_extras_ac', models.IntegerField(null=True, verbose_name='Vagas Extras Ampla Concorrência')),
                ('vagas_extras_l1', models.IntegerField(null=True, verbose_name='Vagas Extras L1')),
                ('vagas_extras_l2', models.IntegerField(null=True, verbose_name='Vagas Extras L2')),
                ('vagas_extras_l5', models.IntegerField(null=True, verbose_name='Vagas Extras L5')),
                ('vagas_extras_l6', models.IntegerField(null=True, verbose_name='Vagas Extras L6')),
                ('vagas_extras_l9', models.IntegerField(null=True, verbose_name='Vagas Extras L9')),
                ('vagas_extras_l10', models.IntegerField(null=True, verbose_name='Vagas Extras L10')),
                ('vagas_extras_l13', models.IntegerField(null=True, verbose_name='Vagas Extras L13')),
                ('vagas_extras_l14', models.IntegerField(null=True, verbose_name='Vagas Extras L14')),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.ciclo', verbose_name='Ciclo')),
            ],
            options={
                'verbose_name': 'Vagas de Ciclo',
                'verbose_name_plural': 'Vagas de Ciclo',
            },
        ),
        migrations.CreateModel(
            name='UnidadeOrganizacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('excluido', models.BooleanField(default=False, verbose_name='Excluído')),
                ('instituicao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.instituicao', verbose_name='Instituição')),
                ('situacao_inconsistencia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoinconsistencia', verbose_name='Situação da Inconsistência')),
                ('unidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.unidade', verbose_name='Unidade')),
            ],
            options={
                'verbose_name': 'Unidade Organizacional',
                'verbose_name_plural': 'Unidades Organizacionais',
            },
        ),
        migrations.CreateModel(
            name='Titulacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=255, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('nivel_ensino', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.nivelensinoservidor', verbose_name='Nível de Ensino')),
            ],
            options={
                'verbose_name': 'Titulação',
                'verbose_name_plural': 'Titulações',
            },
        ),
        migrations.CreateModel(
            name='Servidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(db_index=True, max_length=255, verbose_name='Matrícula')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('sexo', models.CharField(choices=[['M', 'M'], ['F', 'F']], max_length=1, verbose_name='Sexo')),
                ('cpf', models.CharField(max_length=255, verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('excluido', models.BooleanField(default=False, verbose_name='Excluído')),
                ('justificativa_lotacao_reitoria_aceita', models.BooleanField(null=True, verbose_name='Justificativa Lotação da Reitoria Aceita')),
                ('justificativa_escolaridade_cargo_aceita', models.BooleanField(null=True, verbose_name='Justificativa para Divergência Escolaridade x Cargo Aceita')),
                ('justificativa_duplicidade_lotacao_aceita', models.BooleanField(null=True, verbose_name='Justificativa para Divergência de Duplicidade de Lotação Aceita')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.cargoemprego', verbose_name='Cargo')),
                ('classe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.classe', verbose_name='Classe')),
                ('escolaridade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.escolaridade', verbose_name='Escolaridade')),
                ('jornada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.jornadatrabalho', verbose_name='Jornada de Trabalho')),
                ('justificativa_duplicidade_lotacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s13', to='pnp.justificativa', verbose_name='Justificativa para Divergência de Duplicidade de Lotação')),
                ('justificativa_escolaridade_cargo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s12', to='pnp.justificativa', verbose_name='Justificativa para Divergência Escolaridade x Cargo')),
                ('justificativa_lotacao_reitoria', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s11', to='pnp.justificativa', verbose_name='Justificativa Lotação da Reitoria')),
                ('lotacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.unidadeorganizacional', verbose_name='Lotação')),
                ('rsc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.rsc', verbose_name='RSC')),
                ('situacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoservidor', verbose_name='Situação')),
                ('situacao_inconsistencia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoinconsistencia', verbose_name='Situação da Inconsistência')),
                ('titulacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.titulacao', verbose_name='Titulação')),
            ],
            options={
                'verbose_name': 'Servidor',
                'verbose_name_plural': 'Servidores',
            },
        ),
        migrations.CreateModel(
            name='RelatorioInconsistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('campo1', models.IntegerField(verbose_name='Curso com nomenclatura inválida')),
                ('campo2', models.IntegerField(verbose_name='Curso não associados ao catálogo')),
                ('campo3', models.IntegerField(verbose_name='Ciclo com evasão zero não justificada')),
                ('campo4', models.IntegerField(verbose_name='Ciclo com carga-horária insuficiente')),
                ('campo5', models.IntegerField(verbose_name='Ciclo sem programa associado')),
                ('campo6', models.IntegerField(verbose_name='Ciclo com duração imprópria')),
                ('campo7', models.IntegerField(verbose_name='Ciclo sem detalhamento de vaga')),
                ('campo8', models.IntegerField(verbose_name='Ciclo com ingressantes maior que inscritos')),
                ('campo9', models.IntegerField(verbose_name='Ciclo de cursos presenciais sem turno associado')),
                ('campo10', models.IntegerField(verbose_name='Ciclo de cursos EAD com turnos associados')),
                ('campo11', models.IntegerField(verbose_name='Matrícula com data anterior a data de início do ciclo')),
                ('campo12', models.IntegerField(verbose_name='Matrícula com data posterior a data de ocorrência')),
                ('campo13', models.IntegerField(verbose_name='Matrícula de alunos duplicadas')),
                ('campo14', models.IntegerField(verbose_name='Matrícula retenção crítica')),
                ('campo15', models.IntegerField(verbose_name='Matrícula retenção FIC')),
                ('campo16', models.IntegerField(verbose_name='Matrícula de alunos sem cor/raça definida')),
                ('campo17', models.IntegerField(verbose_name='Matrícula de alunos sem renda definida')),
                ('campo18', models.IntegerField(verbose_name='Matrícula sem turno')),
                ('campo19', models.IntegerField(verbose_name='Matrícula com turno invalido no ciclo')),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.unidade', verbose_name='Unidade')),
            ],
            options={
                'verbose_name': 'Relatório de Inconsistência',
                'verbose_name_plural': 'Relatórios de Inconsistências',
            },
        ),
        migrations.CreateModel(
            name='RegraInconsistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(verbose_name='Código')),
                ('tipo', models.CharField(choices=[['Curso', 'Curso'], ['Ciclo', 'Ciclo'], ['Matrícula', 'Matrícula']], max_length=255, verbose_name='Tipo')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(max_length=255, verbose_name='Descrição')),
                ('acoes', models.ManyToManyField(to='pnp.acao', verbose_name='Ações')),
            ],
            options={
                'verbose_name': 'Regra de Consistência',
                'verbose_name_plural': 'Regras de Consistência',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='RegraAssociacaoPrograma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modalidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.modalidade', verbose_name='Modalidade')),
                ('programas', models.ManyToManyField(to='pnp.programa', verbose_name='Programas')),
                ('tipos_curso', models.ManyToManyField(to='pnp.tipocurso', verbose_name='Tipos de Cursos')),
            ],
            options={
                'verbose_name': 'Regra de Associação a Programas',
                'verbose_name_plural': 'Regras de Associação a Programas',
            },
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(db_index=True, max_length=20, verbose_name='Código')),
                ('ingressante', models.BooleanField(default=False, verbose_name='Ingressante')),
                ('atendida', models.BooleanField(default=False, verbose_name='Atendida')),
                ('data_matricula', models.DateField(verbose_name='Data da Matrícula')),
                ('data_ocorrencia', models.DateField(verbose_name='Data da Ocorrência')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(verbose_name='Data da Atualização')),
                ('excluido', models.BooleanField(default=False, verbose_name='Excluído')),
                ('justificativa_retencao_aceita', models.BooleanField(null=True, verbose_name='Justificativa da Retenção Aceita')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.aluno', verbose_name='Aluno')),
                ('ciclo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.ciclo', verbose_name='Ciclo')),
                ('justificativa_retencao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s5', to='pnp.justificativa', verbose_name='Justificativa da Retenção')),
                ('situacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaomatricula', verbose_name='Situação')),
                ('situacao_inconsistencia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoinconsistencia', verbose_name='Situação da Inconsistência')),
                ('turno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.turno', verbose_name='Turno')),
            ],
            options={
                'verbose_name': 'Matrícula',
                'verbose_name_plural': 'Matrículas',
            },
        ),
        migrations.CreateModel(
            name='LinhaArquivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(verbose_name='Número')),
                ('conteudo', models.TextField(verbose_name='Conteúdo')),
                ('data_processamento', models.DateTimeField(null=True, verbose_name='Data do Processamento')),
                ('erro', models.TextField(null=True, verbose_name='Erro')),
                ('arquivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.arquivo', verbose_name='Arquivo')),
                ('tipo_erro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.tipoerrocarga', verbose_name='Tipo de Erro')),
            ],
            options={
                'verbose_name': 'Linha do Arquivo',
                'verbose_name_plural': 'Linhas do Arquivo',
                'ordering': ('pk', 'arquivo'),
            },
        ),
        migrations.AddField(
            model_name='justificativa',
            name='tipo_inconsistencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.tipoinconsistencia', verbose_name='Tipo'),
        ),
        migrations.AddField(
            model_name='instituicao',
            name='gestao_pessoas',
            field=models.ManyToManyField(blank=True, related_name='instituicoes_gestao_pessoas', to='pnp.pessoa', verbose_name='Gestão de Pessoas'),
        ),
        migrations.AddField(
            model_name='instituicao',
            name='pesquisadores_institucionais',
            field=models.ManyToManyField(blank=True, related_name='instituicoes_pesquisadas', to='pnp.pessoa', verbose_name='Pesquisadores Institucionais'),
        ),
        migrations.AddField(
            model_name='instituicao',
            name='recursos_humanos',
            field=models.ManyToManyField(blank=True, related_name='instituicoes_recursos_humanos', to='pnp.pessoa', verbose_name='Recursos Humanos'),
        ),
        migrations.AddField(
            model_name='instituicao',
            name='reitor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pnp.pessoa', verbose_name='Reitor'),
        ),
        migrations.AddField(
            model_name='instituicao',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.tipoinstituicao', verbose_name='Tipo'),
        ),
        migrations.CreateModel(
            name='Inconsistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_geracao', models.DateTimeField(auto_now=True, verbose_name='Data da Geração')),
                ('data_validacao_ra', models.DateTimeField(null=True, verbose_name='Data da Validação RA')),
                ('data_validacao_pi', models.DateTimeField(null=True, verbose_name='Data da Validação PI')),
                ('data_validacao_re', models.DateTimeField(null=True, verbose_name='Data da Validação RE')),
                ('ignorada', models.BooleanField(default=False, verbose_name='Ignorada')),
                ('alteracao_anterior', models.BooleanField(default=False, verbose_name='Alterado Anteriormente')),
                ('ciclo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.ciclo', verbose_name='Ciclo')),
                ('configuracao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.configuracao', verbose_name='Configuração')),
                ('curso', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.curso', verbose_name='Curso')),
                ('matricula', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.matricula', verbose_name='Matrícula')),
                ('responsavel_validacao_pi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inconsistencias_pi', to='pnp.pessoa', verbose_name='Responsável pela Validação PI')),
                ('responsavel_validacao_ra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inconsistencias_ra', to='pnp.pessoa', verbose_name='Responsável pela Validação RA')),
                ('responsavel_validacao_re', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inconsistencias_re', to='pnp.pessoa', verbose_name='Responsável pela Validação RE')),
                ('servidor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.servidor', verbose_name='Servidor')),
                ('situacao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoinconsistencia', verbose_name='Situação')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.tipoinconsistencia', verbose_name='Tipo')),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.unidade', verbose_name='Unidade')),
                ('unidadeorganizacional', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.unidadeorganizacional', verbose_name='Unidade Organizacional')),
            ],
            options={
                'verbose_name': 'Inconsistência',
                'verbose_name_plural': 'Inconsistências',
            },
        ),
        migrations.CreateModel(
            name='HistoricoAlteracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(null=True, verbose_name='Data/Hora')),
                ('descricao', models.CharField(max_length=512, verbose_name='Descrição')),
                ('inconsistencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.inconsistencia', verbose_name='Inconsistência')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Histórico de Alteração',
                'verbose_name_plural': 'Histórico de Alterações',
            },
        ),
        migrations.AddField(
            model_name='escolaridade',
            name='nivel_ensino',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.nivelensinoservidor', verbose_name='Nível de Ensino'),
        ),
        migrations.CreateModel(
            name='CursoCatalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('fator', models.DecimalField(decimal_places=6, max_digits=9, max_length=4, null=True, verbose_name='Fator')),
                ('duracao_minima', models.IntegerField(help_text='Em anos', verbose_name='Duração Mínima')),
                ('carga_horaria_minima', models.IntegerField(help_text='Em horas', verbose_name='Carga Horária Mínima')),
                ('observacao', models.CharField(blank=True, max_length=255, verbose_name='Observação')),
                ('capacitacao', models.BooleanField(default=False, verbose_name='Curso de Capacitação')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data do Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Atualização')),
                ('area_cnpq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.areacnpq', verbose_name='Área')),
                ('eixo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.eixo', verbose_name='Eixo')),
                ('nivel_ensino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.nivelensino', verbose_name='Nível de Ensino')),
                ('sub_eixo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.subeixo', verbose_name='Sub-Eixo')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.tipocurso', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Curso do Catálogo',
                'verbose_name_plural': 'Cursos do Catálogo',
            },
        ),
        migrations.AddField(
            model_name='curso',
            name='candidatos_catalogo',
            field=models.ManyToManyField(related_name='candidatos', to='pnp.cursocatalogo', verbose_name='Candidatos do Catálogo'),
        ),
        migrations.AddField(
            model_name='curso',
            name='curso_catalogo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.cursocatalogo', verbose_name='Curso do Catálogo'),
        ),
        migrations.AddField(
            model_name='curso',
            name='eixo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.eixo', verbose_name='Eixo'),
        ),
        migrations.AddField(
            model_name='curso',
            name='justificativa_nome',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s1', to='pnp.justificativa', verbose_name='Justificativa do Nome'),
        ),
        migrations.AddField(
            model_name='curso',
            name='modalidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.modalidade', verbose_name='Modalidade'),
        ),
        migrations.AddField(
            model_name='curso',
            name='situacao_inconsistencia',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoinconsistencia', verbose_name='Situação da Inconsistência'),
        ),
        migrations.AddField(
            model_name='curso',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.tipocurso', verbose_name='Tipo'),
        ),
        migrations.AddField(
            model_name='curso',
            name='unidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.unidade', verbose_name='Unidade'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='curso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.curso', verbose_name='Curso'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='justificativa_carga_horaria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s2', to='pnp.justificativa', verbose_name='Justificativa da Carga-Horária'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='justificativa_duracao_impropria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s4', to='pnp.justificativa', verbose_name='Justificativa da Duração'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='justificativa_evasao_zero',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s3', to='pnp.justificativa', verbose_name='Justificativa da Evasão 0%'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='programa',
            field=models.ForeignKey(blank=True, max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.programa', verbose_name='Programa'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='situacao_inconsistencia',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.situacaoinconsistencia', verbose_name='Situação da Inconsistência'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='tipo_oferta',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.tipooferta', verbose_name='Tipo de Oferta'),
        ),
        migrations.AddField(
            model_name='ciclo',
            name='turnos',
            field=models.ManyToManyField(blank=True, to='pnp.turno', verbose_name='Turnos'),
        ),
        migrations.AddField(
            model_name='cargoemprego',
            name='grupo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.grupocargoemprego', verbose_name='Grupo'),
        ),
        migrations.AddField(
            model_name='cargoemprego',
            name='nivel_ensino',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.nivelensinoservidor', verbose_name='Nível de Ensino'),
        ),
        migrations.AddField(
            model_name='arquivo',
            name='configuracao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.configuracao', verbose_name='Configuração'),
        ),
        migrations.AddField(
            model_name='arquivo',
            name='unidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.unidade', verbose_name='Unidade'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='raca',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.raca', verbose_name='Raça'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='renda_per_capita',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pnp.faixarenda', verbose_name='Renda per Capta'),
        ),
        migrations.CreateModel(
            name='Alteracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objeto', pnp.fields.GenericField(max_length=255, null=True, verbose_name='Objeto')),
                ('campo', models.CharField(max_length=255, verbose_name='Campo')),
                ('valor_anterior', pnp.fields.GenericField(max_length=255, null=True, verbose_name='Valor Anterior')),
                ('valor_atual', pnp.fields.GenericField(max_length=255, null=True, verbose_name='Valor Atual')),
                ('inconsistencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.inconsistencia', verbose_name='Inconsistência')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Alteração',
                'verbose_name_plural': 'Alterações',
            },
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pessoa_fisica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pnp.pessoa', verbose_name='Pessoa')),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
            },
        ),
    ]
