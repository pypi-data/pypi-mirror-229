# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime


class CrmCreateContactRequestDto(pydantic.BaseModel):
    first_name: typing.Optional[str] = pydantic.Field(description="The contact first name")
    last_name: typing.Optional[str] = pydantic.Field(description="The contact last name")
    company_name: typing.Optional[str] = pydantic.Field(description="The contact company name")
    emails: typing.Optional[typing.List[str]] = pydantic.Field(description="List of contact email addresses")
    phone_numbers: typing.Optional[typing.List[str]] = pydantic.Field(description="List of contact phone numbers")
    deal_ids: typing.Optional[typing.List[str]] = pydantic.Field(description="List of associated deal IDs")
    account_ids: typing.Optional[typing.List[str]] = pydantic.Field(description="List of associated account IDs")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
