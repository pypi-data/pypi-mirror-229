# contains code style and formatting configuration for the complete project
[tool.poetry]
name = "bodhilib"
version = "0.1.4"
description = "intuitive and powerful library to work with LLMs"
authors = ["Amir Nagri <amir.nagri@proton.me>"]
readme = "README.md"
packages = [
  { include = "bodhilib", from = "src" },
  { include = "bodhilib", from = "libs/bodhilib.cohere/src" },
  { include = "bodhilib", from = "libs/bodhilib.openai/src" },
  { include = "bodhilib", from = "libs/bodhilib.sentence_transformers/src" },
]

[tool.poetry.dependencies]
python = "^3.8.1,<4"
jinja2 = "^3.1.2"
pluggy = "^1.2.0"
pydantic = "^1"
python-dotenv = "^1.0.0"
cohere = "^4.21"
openai = "^0.27.8"
sentence-transformers = "^2.2.2"
torch = ">=2.0.0, !=2.0.1" # sentence-transformers dependency

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
flake8 = "^6.1.0"
mypy = "^1.4.1"
ruff = "^0.0.284"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-socket = "^0.6.0"
pytest-dotenv = "^0.5.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins.bodhilib]
"bodhilib.openai" = "bodhilib.openai"
"bodhilib.cohere" = "bodhilib.cohere"
"bodhilib.file_loader" = "bodhilib.data_loader.file"
"bodhilib.sentence_transformers" = "bodhilib.sentence_transformers"

[tool.pytest.ini_options]
pythonpath = [
  "src",
  "libs/bodhilib.cohere/src",
  "libs/bodhilib.openai/src",
  "libs/bodhilib.sentence_transformers/src",
]
testpaths = [
  "tests",
  "libs/bodhilib.cohere/tests_bodhilib_cohere",
  "libs/bodhilib.openai/tests_bodhilib_openai",
  "libs/bodhilib.sentence_transformers/tests_bodhilib_sentence_transformers",
]
filterwarnings = ["error"]
markers = [
  "all: tagged on all tests using hooks in conftest.py",
  "live: calls external APIs (skipped by default)",
]
addopts = '-m "not live"'
env_files = [".env.test"]

[tool.poetry.group.docs.dependencies]
sphinx = "^7.1.2"
sphinx-copybutton = "^0.5.2"
sphinx-rtd-theme = "^1.3.0"
pydocstyle = "^6.3.0"
toml = "^0.10.2"

[tool.black]
line-length = 120
target-version = ['py38']
preview = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = 3.8
plugins = ['pydantic.mypy']
exclude = '(?x)(test\_.*|conftest\.py|docs/.*/conf\.py)'
mypy_path = [
  "src",
  "libs/bodhilib.cohere/src",
  "libs/bodhilib.openai/src",
  "libs/bodhilib.sentence_transformers/src",
]
disallow_incomplete_defs = true
disallow_untyped_defs = true
explicit_package_bases = true
ignore_missing_imports = true
namespace_packages = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
# disallow_untyped_calls = true

[tool.ruff]
target-version = "py38"
select = ["E", "F", "B"]
ignore = []
fixable = ["ALL"]
unfixable = []
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
per-file-ignores = {}
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fix = true

[tool.pydocstyle]
match = "(?!test_|conftest).*\\.py"
add_ignore = "D102, D107"
convention = "google"
