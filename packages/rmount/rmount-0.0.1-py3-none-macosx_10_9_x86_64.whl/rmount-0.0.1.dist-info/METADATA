Metadata-Version: 2.1
Name: rmount
Version: 0.0.1
Summary: A robust file-system mount to a remote storage.
Home-page: https://github.com/fostiropoulos/rmount
Author: Iordanis Fostiropoulos
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: mypy (>=1.2.0) ; extra == 'dev'
Requires-Dist: pytest (>=7.3.0) ; extra == 'dev'
Requires-Dist: black (>=23.3.0) ; extra == 'dev'
Requires-Dist: flake8 (>=6.0.0) ; extra == 'dev'
Requires-Dist: pylint (>=2.17.2) ; extra == 'dev'
Requires-Dist: mock (>=5.0.2) ; extra == 'dev'
Requires-Dist: docker (>=6.1.3) ; extra == 'dev'
Requires-Dist: pydoclint (>=0.1.0) ; extra == 'dev'
Requires-Dist: paramiko (>=3.2.0) ; extra == 'dev'

# RMount - Robust Remote Mount


This is a robust remote mount wrapper around the mount utility [rclone](https://rclone.org/). The python-side implementation makes it possible to integrate rclone into your python application with pre-packaged rclone binaries (version v1.62.2). This is a ready-to-go solution without external dependencies for mounting a local directory to a remote storage provider such as AWS S3. RMount is robust to time-outs, connection drops, while it abstracts the details of integrating directly with the remote provider. **NOTE** Currently only supports Linux.


**Storage Systems** currently supported:
* [Google Cloud Storage](https://cloud.google.com/storage) directly as well as via S3.
* Remote SSH, i.e. for your own private server with SSH access
* S3 remote file-systems that are supported by several cloud providers [listed below](#providers).

## Install

`pip install rmount`

* `mountpoint` command must be accessible and in Path. e.g. running `mountpoint .` should return `. is not a mountpoint` or `. is a mountpoint`


## Usage
```python
from rmount import RemoteMount

mount = RCloneWrapper(config, remote_path, local_path)
with mount:
    timestamp = (local_path / ".rmount").read_text()
    print(timestamp)

```



## Developer guide

```bash
$ pip install -e .[dev]
$ make test
```


## <a name="providers"></a> S3 Remote Storage Providers

In theory, RMount support all [the providers supported by rclone](https://rclone.org/overview/), but you will need to implement your own configuration object. We have only tested with AWS S3 but in *theory* it should work with all providers:
* AWS S3
* Alibaba Cloud (Aliyun) Object Storage System (OSS)
* Ceph
* China Mobile Ecloud Elastic Object Storage (EOS)
* Cloudflare R2
* Arvan Cloud Object Storage (AOS)
* DigitalOcean Spaces
* Dreamhost
* GCS
* Huawei OBS
* IBM COS S3
* IDrive e2
* IONOS Cloud
* Liara Object Storage
* Minio
* Petabox
* Qiniu Cloud Object Storage (Kodo)
* RackCorp Object Storage
* Scaleway
* Seagate Lyve Cloud
* SeaweedFS
* StackPath
* Storj
* Tencent Cloud Object Storage (COS)
* Wasabi



