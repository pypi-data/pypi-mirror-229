"""Add EmailDomain model and from options to Tenant

Revision ID: adbe22247f16
Revises: deb3261a9742
Create Date: 2023-05-31 09:35:06.226867

"""
import sqlalchemy as sa
from alembic import op

import fief

# revision identifiers, used by Alembic.
revision = "adbe22247f16"
down_revision = "deb3261a9742"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fief_email_domains",
        sa.Column("email_provider", sa.String(length=255), nullable=False),
        sa.Column("domain_id", sa.String(length=255), nullable=False),
        sa.Column("domain", sa.String(length=255), nullable=False),
        sa.Column("records", sa.JSON(), nullable=False),
        sa.Column("id", fief.models.generics.GUID(), nullable=False),
        sa.Column(
            "created_at",
            fief.models.generics.TIMESTAMPAware(timezone=True),
            server_default=sa.func.now(),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            fief.models.generics.TIMESTAMPAware(timezone=True),
            server_default=sa.func.now(),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("domain"),
    )
    op.create_index(
        op.f("ix_fief_email_domains_created_at"),
        "fief_email_domains",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_fief_email_domains_updated_at"),
        "fief_email_domains",
        ["updated_at"],
        unique=False,
    )
    op.add_column(
        "fief_tenants",
        sa.Column("email_from_email", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "fief_tenants",
        sa.Column("email_from_name", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "fief_tenants",
        sa.Column("email_domain_id", fief.models.generics.GUID(), nullable=True),
    )

    connection = op.get_bind()
    if connection.dialect.name == "sqlite":
        with op.batch_alter_table("fief_tenants") as batch_op:
            batch_op.create_foreign_key(
                "fief_tenants_email_domain_fkey",
                "fief_email_domains",
                ["email_domain_id"],
                ["id"],
                ondelete="SET NULL",
            )
    else:
        op.create_foreign_key(
            "fief_tenants_email_domain_fkey",
            "fief_tenants",
            "fief_email_domains",
            ["email_domain_id"],
            ["id"],
            ondelete="SET NULL",
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fief_tenants_email_domain_fkey", "fief_tenants", type_="foreignkey"
    )
    op.drop_column("fief_tenants", "email_domain_id")
    op.drop_column("fief_tenants", "email_from_name")
    op.drop_column("fief_tenants", "email_from_email")
    op.drop_index(
        op.f("ix_fief_email_domains_updated_at"), table_name="fief_email_domains"
    )
    op.drop_index(
        op.f("ix_fief_email_domains_created_at"), table_name="fief_email_domains"
    )
    op.drop_table("fief_email_domains")
    # ### end Alembic commands ###
