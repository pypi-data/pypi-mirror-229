[tool.poetry]
name = "HSSM"
version = "0.1.4"
description = ""
authors = [
    "Alexander Fengler <alexander_fengler@brown.edu>",
    "Paul Xu <yang_xu@brown.edu>",
    "Aisulu Omar <aisulu_omar@brown.edu>",
    "Michael Frank <michael_frank@brown.edu>",
]
readme = "README.md"
license = "Copyright 2023, Brown University, Providence, RI."
packages = [{ include = "hssm", from = "src" }]
repository = "https://github.com/lnccbrown/HSSM"
keywords = ["HSSM", "sequential sampling models", "bayesian", "bayes", "mcmc"]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
pymc = ">=5.6.0,<5.8.0"
scipy = "1.10.1"
arviz = "^0.14.0"
numpy = "^1.23.4"
onnx = "^1.12.0"
jax = "^0.4.0"
jaxlib = "^0.4.0"
ssm-simulators = "^0.3.0"
huggingface-hub = "^0.15.1"
onnxruntime = "^1.15.0"
bambi = "^0.12.0"
numpyro = "^0.12.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
black = { extras = ["jupyter"], version = "^23.7.0" }
mypy = "^1.4.1"
pre-commit = "^2.20.0"
jupyterlab = "^4.0.2"
ipykernel = "^6.16.0"
ipywidgets = "^8.0.3"
graphviz = "^0.20.1"
ruff = "^0.0.272"
mkdocs = "^1.4.3"
mkdocs-material = "^9.1.17"
mkdocstrings-python = "^1.1.2"
mkdocs-jupyter = "^0.24.1"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88
target-version = "py39"
unfixable = ["E711"]

select = [
    # pydocstyle
    "D",
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "I",
    "W",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-quotes
    "Q",
    # pylint
    "PLE",
    "PLR",
    "PLW",
    # misc lints
    "PIE",
    # flake8-pyi
    "PYI",
    # tidy imports
    "TID",
    # type-checking imports
    "TCH",
]

ignore = [
    # space before : (needed for how black formats slicing)
    # "E203",  # not yet implemented
    # module level import not at top of file
    "E402",
    # do not assign a lambda expression, use a def
    "E731",
    # line break before binary operator
    # "W503",  # not yet implemented
    # line break after binary operator
    # "W504",  # not yet implemented
    # controversial
    "B006",
    # controversial
    "B007",
    # controversial
    "B008",
    # setattr is used to side-step mypy
    "B009",
    # getattr is used to side-step mypy
    "B010",
    # tests use assert False
    "B011",
    # tests use comparisons but not their returned value
    "B015",
    # false positives
    "B019",
    # Loop control variable overrides iterable it iterates
    "B020",
    # Function definition does not bind loop variable
    "B023",
    # Functions defined inside a loop must not use variables redefined in the loop
    # "B301",  # not yet implemented
    # Too many arguments to function call
    "PLR0913",
    # Too many returns
    "PLR0911",
    # Too many branches
    "PLR0912",
    # Too many statements
    "PLR0915",
    # Global statements are discouraged
    "PLW0603",
    # Docstrings should not be included in stubs
    "PYI021",
    # Use typing_extensions.TypeAlias for type aliases
    # "PYI026",  # not yet implemented
    # Use "collections.abc.*" instead of "typing.*" (PEP 585 syntax)
    # "PYI027",  # not yet implemented
    # while int | float can be shortened to float, the former is more explicit
    # "PYI041",  # not yet implemented

    # Additional checks that don't pass yet
    # Within an except clause, raise exceptions with ...
    "B904",
    # Magic number
    "PLR2004",
    # Consider `elif` instead of `else` then `if` to remove indentation level
    "PLR5501",
    # Allow importing from parent modules
    "TID252",
]

exclude = [
    ".github",
    "docs",
    "notebook",
    "tests",
    "src/hssm/likelihoods/hddm_wfpt/cdfdif_wrapper.c",
    "src/hssm/likelihoods/hddm_wfpt/wfpt.cpp",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.mypy]
ignore_missing_imports = true

[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[build-system]
requires = ["poetry-core", "Cython", "numpy"]
build-backend = "poetry.core.masonry.api"
