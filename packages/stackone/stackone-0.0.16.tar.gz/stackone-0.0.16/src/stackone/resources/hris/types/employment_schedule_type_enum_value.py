# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EmploymentScheduleTypeEnumValue(str, enum.Enum):
    FULL_TIME = "full_time"
    SHIFTS = "shifts"
    PART_TIME = "part_time"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        full_time: typing.Callable[[], T_Result],
        shifts: typing.Callable[[], T_Result],
        part_time: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EmploymentScheduleTypeEnumValue.FULL_TIME:
            return full_time()
        if self is EmploymentScheduleTypeEnumValue.SHIFTS:
            return shifts()
        if self is EmploymentScheduleTypeEnumValue.PART_TIME:
            return part_time()
        if self is EmploymentScheduleTypeEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
