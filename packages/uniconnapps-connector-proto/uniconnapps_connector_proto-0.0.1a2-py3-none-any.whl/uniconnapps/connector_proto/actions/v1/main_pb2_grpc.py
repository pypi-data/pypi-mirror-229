# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from uniconnapps.connector_proto.actions.v1 import main_pb2 as uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2


class ActionsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getActionType = channel.unary_unary(
                '/com.uniconnapps.connector_proto.actions.v1.ActionsService/getActionType',
                request_serializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.GetActionTypeRequest.SerializeToString,
                response_deserializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.GetActionTypeResponse.FromString,
                )
        self.pushActionType = channel.unary_unary(
                '/com.uniconnapps.connector_proto.actions.v1.ActionsService/pushActionType',
                request_serializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.PushActionTypeRequest.SerializeToString,
                response_deserializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.PushActionTypeResponse.FromString,
                )
        self.streamActions = channel.stream_stream(
                '/com.uniconnapps.connector_proto.actions.v1.ActionsService/streamActions',
                request_serializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.StreamActionsRequest.SerializeToString,
                response_deserializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.StreamActionsResponse.FromString,
                )


class ActionsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getActionType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pushActionType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def streamActions(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ActionsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getActionType': grpc.unary_unary_rpc_method_handler(
                    servicer.getActionType,
                    request_deserializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.GetActionTypeRequest.FromString,
                    response_serializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.GetActionTypeResponse.SerializeToString,
            ),
            'pushActionType': grpc.unary_unary_rpc_method_handler(
                    servicer.pushActionType,
                    request_deserializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.PushActionTypeRequest.FromString,
                    response_serializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.PushActionTypeResponse.SerializeToString,
            ),
            'streamActions': grpc.stream_stream_rpc_method_handler(
                    servicer.streamActions,
                    request_deserializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.StreamActionsRequest.FromString,
                    response_serializer=uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.StreamActionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.uniconnapps.connector_proto.actions.v1.ActionsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ActionsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getActionType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.uniconnapps.connector_proto.actions.v1.ActionsService/getActionType',
            uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.GetActionTypeRequest.SerializeToString,
            uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.GetActionTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def pushActionType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.uniconnapps.connector_proto.actions.v1.ActionsService/pushActionType',
            uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.PushActionTypeRequest.SerializeToString,
            uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.PushActionTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def streamActions(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/com.uniconnapps.connector_proto.actions.v1.ActionsService/streamActions',
            uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.StreamActionsRequest.SerializeToString,
            uniconnapps_dot_connector__proto_dot_actions_dot_v1_dot_main__pb2.StreamActionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
