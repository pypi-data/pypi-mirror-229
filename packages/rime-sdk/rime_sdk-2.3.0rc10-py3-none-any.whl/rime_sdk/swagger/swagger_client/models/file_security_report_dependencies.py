# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FileSecurityReportDependencies(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dependencies': 'list[str]',
        'unexpected_dependencies': 'list[str]',
        'unsafe_dependencies': 'list[str]'
    }

    attribute_map = {
        'dependencies': 'dependencies',
        'unexpected_dependencies': 'unexpectedDependencies',
        'unsafe_dependencies': 'unsafeDependencies'
    }

    def __init__(self, dependencies=None, unexpected_dependencies=None, unsafe_dependencies=None):  # noqa: E501
        """FileSecurityReportDependencies - a model defined in Swagger"""  # noqa: E501
        self._dependencies = None
        self._unexpected_dependencies = None
        self._unsafe_dependencies = None
        self.discriminator = None
        if dependencies is not None:
            self.dependencies = dependencies
        if unexpected_dependencies is not None:
            self.unexpected_dependencies = unexpected_dependencies
        if unsafe_dependencies is not None:
            self.unsafe_dependencies = unsafe_dependencies

    @property
    def dependencies(self):
        """Gets the dependencies of this FileSecurityReportDependencies.  # noqa: E501

        The list of dependencies in the file.  # noqa: E501

        :return: The dependencies of this FileSecurityReportDependencies.  # noqa: E501
        :rtype: list[str]
        """
        return self._dependencies

    @dependencies.setter
    def dependencies(self, dependencies):
        """Sets the dependencies of this FileSecurityReportDependencies.

        The list of dependencies in the file.  # noqa: E501

        :param dependencies: The dependencies of this FileSecurityReportDependencies.  # noqa: E501
        :type: list[str]
        """

        self._dependencies = dependencies

    @property
    def unexpected_dependencies(self):
        """Gets the unexpected_dependencies of this FileSecurityReportDependencies.  # noqa: E501

        The list of dependencies that were not in the default allow list.  # noqa: E501

        :return: The unexpected_dependencies of this FileSecurityReportDependencies.  # noqa: E501
        :rtype: list[str]
        """
        return self._unexpected_dependencies

    @unexpected_dependencies.setter
    def unexpected_dependencies(self, unexpected_dependencies):
        """Sets the unexpected_dependencies of this FileSecurityReportDependencies.

        The list of dependencies that were not in the default allow list.  # noqa: E501

        :param unexpected_dependencies: The unexpected_dependencies of this FileSecurityReportDependencies.  # noqa: E501
        :type: list[str]
        """

        self._unexpected_dependencies = unexpected_dependencies

    @property
    def unsafe_dependencies(self):
        """Gets the unsafe_dependencies of this FileSecurityReportDependencies.  # noqa: E501

        The list of dependencies that were in the default block list.  # noqa: E501

        :return: The unsafe_dependencies of this FileSecurityReportDependencies.  # noqa: E501
        :rtype: list[str]
        """
        return self._unsafe_dependencies

    @unsafe_dependencies.setter
    def unsafe_dependencies(self, unsafe_dependencies):
        """Sets the unsafe_dependencies of this FileSecurityReportDependencies.

        The list of dependencies that were in the default block list.  # noqa: E501

        :param unsafe_dependencies: The unsafe_dependencies of this FileSecurityReportDependencies.  # noqa: E501
        :type: list[str]
        """

        self._unsafe_dependencies = unsafe_dependencies

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FileSecurityReportDependencies, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileSecurityReportDependencies):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
