<testsuite errors="0" timestamp="2023-09-04T17:50:18.066836" host="localhost" tests="70" skipped="0" failures="0" time="0.484006"><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000060" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000024" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _pull_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000367" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _commit_file it should init the print in the class" file="tests/cnd_scaffold_spec.py" time="0.000192" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should return the scheme if scheme is ok" file="tests/cnd_scaffold_spec.py" time="0.000139" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_schema it should raise an error if scheme is not ok" file="tests/cnd_scaffold_spec.py" time="0.000196" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.000104" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_structure it should raise an error if structure is not ok" file="tests/cnd_scaffold_spec.py" time="0.000200" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should return the structure if structure is ok" file="tests/cnd_scaffold_spec.py" time="0.012651" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file" file="tests/cnd_scaffold_spec.py" time="0.000930" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return file with repeat" file="tests/cnd_scaffold_spec.py" time="0.000865" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should return good content with jinja engine" file="tests/cnd_scaffold_spec.py" time="0.004410" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_default it should throw error if invalid yaml" file="tests/cnd_scaffold_spec.py" time="0.001484" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _validate_structure it should raise an error if structure is not valid" file="tests/cnd_scaffold_spec.py" time="0.000930" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.004703" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.004526" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.004440" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.005356" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_file (loop) it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.010883" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should load and prepare file" file="tests/cnd_scaffold_spec.py" time="0.004700" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should raise an error if file cannot be load" file="tests/cnd_scaffold_spec.py" time="0.004350" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _load_files it should skip and return 0 if nothing to push for this step" file="tests/cnd_scaffold_spec.py" time="0.004546" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content for jinja engine it should replace data" file="tests/cnd_scaffold_spec.py" time="0.001060" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace when data is an array of dict" file="tests/cnd_scaffold_spec.py" time="0.000085" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000049" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000044" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace" file="tests/cnd_scaffold_spec.py" time="0.000025" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000056" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _replace_content it should replace with the local_var first" file="tests/cnd_scaffold_spec.py" time="0.000045" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should push files" file="tests/cnd_scaffold_spec.py" time="0.000556" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _push_files it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000896" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000396" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _apply_step it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000353" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000148" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold init it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000146" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000188" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold build it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000160" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should return True if everything work" file="tests/cnd_scaffold_spec.py" time="0.000149" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold runtime it should raise an error if push failed" file="tests/cnd_scaffold_spec.py" time="0.000139" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000120" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000083" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000102" /><testcase classname="tests.cnd_scaffold_spec" name="CndScaffold _default_replace_engine it should replace string" file="tests/cnd_scaffold_spec.py" time="0.000082" /><testcase classname="tests.file_spec" name="File __init__ it should init the print in the class" file="tests/file_spec.py" time="0.000036" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.002739" /><testcase classname="tests.file_spec" name="File apply single file it should init the print in the class" file="tests/file_spec.py" time="0.002518" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.003604" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.003363" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.004755" /><testcase classname="tests.file_spec" name="File apply single file with loop it should init the print in the class" file="tests/file_spec.py" time="0.004680" /><testcase classname="tests.scaffold_spec" name="CndScaffold __init__ it should init the print in the class" file="tests/scaffold_spec.py" time="0.000035" /><testcase classname="tests.scaffold_spec" name="CndScaffold update_step it should update the step" file="tests/scaffold_spec.py" time="0.000027" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.000608" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should update commit list" file="tests/scaffold_spec.py" time="0.000537" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io" file="tests/scaffold_spec.py" time="0.000040" /><testcase classname="tests.scaffold_spec" name="CndScaffold _commit_files it should return an instance of cnd_io if provider is not provide" file="tests/scaffold_spec.py" time="0.000029" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate file" file="tests/scaffold_spec.py" time="0.003614" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should generate multiple file" file="tests/scaffold_spec.py" time="0.005187" /><testcase classname="tests.scaffold_spec" name="CndScaffold apply single file it should  repeat file" file="tests/scaffold_spec.py" time="0.005189" /><testcase classname="tests.structure_spec" name="Structure with provider __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000046" /><testcase classname="tests.structure_spec" name="Structure __init__ it should init the print in the class" file="tests/structure_spec.py" time="0.000035" /><testcase classname="tests.structure_spec" name="Structure structure getter it should return structure value" file="tests/structure_spec.py" time="0.000478" /><testcase classname="tests.structure_spec" name="Structure structure getter it should generate an error" file="tests/structure_spec.py" time="0.000215" /><testcase classname="tests.structure_spec" name="Structure schema getter it should return schema value" file="tests/structure_spec.py" time="0.000172" /><testcase classname="tests.structure_spec" name="Structure schema getter it should generate an error" file="tests/structure_spec.py" time="0.000171" /><testcase classname="tests.structure_spec" name="Structure files getter it should return schema value" file="tests/structure_spec.py" time="0.004799" /><testcase classname="tests.structure_spec" name="Structure files getter it should return cached value" file="tests/structure_spec.py" time="0.000042" /><testcase classname="tests.structure_spec" name="Structure _validate it should return true" file="tests/structure_spec.py" time="0.001344" /><testcase classname="tests.structure_spec" name="Structure _validate it should raise an error" file="tests/structure_spec.py" time="0.000898" /><testcase classname="tests.structure_spec" name="Structure get it should return file" file="tests/structure_spec.py" time="0.002368" /></testsuite>