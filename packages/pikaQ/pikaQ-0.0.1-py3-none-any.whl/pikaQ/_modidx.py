# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/pikaQ',
                'doc_host': 'https://feynlee.github.io',
                'git_url': 'https://github.com/feynlee/pikaQ',
                'lib_path': 'pikaQ'},
  'syms': { 'pikaQ.functions': { 'pikaQ.functions.AddMonths': ('functions.html#addmonths', 'pikaQ/functions.py'),
                                 'pikaQ.functions.Cast': ('functions.html#cast', 'pikaQ/functions.py'),
                                 'pikaQ.functions.Coalesce': ('functions.html#coalesce', 'pikaQ/functions.py'),
                                 'pikaQ.functions.Concat': ('functions.html#concat', 'pikaQ/functions.py'),
                                 'pikaQ.functions.CustomFunction': ('functions.html#customfunction', 'pikaQ/functions.py'),
                                 'pikaQ.functions.CustomFunction.__call__': ( 'functions.html#customfunction.__call__',
                                                                              'pikaQ/functions.py'),
                                 'pikaQ.functions.CustomFunction.__init__': ( 'functions.html#customfunction.__init__',
                                                                              'pikaQ/functions.py'),
                                 'pikaQ.functions.CustomFunction.distinct': ( 'functions.html#customfunction.distinct',
                                                                              'pikaQ/functions.py'),
                                 'pikaQ.functions.CustomFunction.execute': ('functions.html#customfunction.execute', 'pikaQ/functions.py'),
                                 'pikaQ.functions.CustomFunction.over': ('functions.html#customfunction.over', 'pikaQ/functions.py'),
                                 'pikaQ.functions.Date': ('functions.html#date', 'pikaQ/functions.py'),
                                 'pikaQ.functions.DateDiff': ('functions.html#datediff', 'pikaQ/functions.py'),
                                 'pikaQ.functions.DateTrunc': ('functions.html#datetrunc', 'pikaQ/functions.py'),
                                 'pikaQ.functions.convert_date_format': ('functions.html#convert_date_format', 'pikaQ/functions.py')},
            'pikaQ.queries': { 'pikaQ.queries.Exists': ('queries.html#exists', 'pikaQ/queries.py'),
                               'pikaQ.queries.Exists.__init__': ('queries.html#exists.__init__', 'pikaQ/queries.py'),
                               'pikaQ.queries.Exists.execute': ('queries.html#exists.execute', 'pikaQ/queries.py'),
                               'pikaQ.queries.Joiner': ('queries.html#joiner', 'pikaQ/queries.py'),
                               'pikaQ.queries.Joiner.__init__': ('queries.html#joiner.__init__', 'pikaQ/queries.py'),
                               'pikaQ.queries.Joiner.on': ('queries.html#joiner.on', 'pikaQ/queries.py'),
                               'pikaQ.queries.Query': ('queries.html#query', 'pikaQ/queries.py'),
                               'pikaQ.queries.Query.from_': ('queries.html#query.from_', 'pikaQ/queries.py'),
                               'pikaQ.queries.Query.with_': ('queries.html#query.with_', 'pikaQ/queries.py'),
                               'pikaQ.queries.QueryBase': ('queries.html#querybase', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery': ('queries.html#selectquery', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.__add__': ('queries.html#selectquery.__add__', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.__getattr__': ('queries.html#selectquery.__getattr__', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.__init__': ('queries.html#selectquery.__init__', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.__mul__': ('queries.html#selectquery.__mul__', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.execute': ('queries.html#selectquery.execute', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.join': ('queries.html#selectquery.join', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.select': ('queries.html#selectquery.select', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.union': ('queries.html#selectquery.union', 'pikaQ/queries.py'),
                               'pikaQ.queries.SelectQuery.union_all': ('queries.html#selectquery.union_all', 'pikaQ/queries.py'),
                               'pikaQ.queries.Selector': ('queries.html#selector', 'pikaQ/queries.py'),
                               'pikaQ.queries.Selector.__getattr__': ('queries.html#selector.__getattr__', 'pikaQ/queries.py'),
                               'pikaQ.queries.Selector.__init__': ('queries.html#selector.__init__', 'pikaQ/queries.py'),
                               'pikaQ.queries.Selector.distinct': ('queries.html#selector.distinct', 'pikaQ/queries.py'),
                               'pikaQ.queries.Selector.parse_select': ('queries.html#selector.parse_select', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table': ('queries.html#table', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table.__getattr__': ('queries.html#table.__getattr__', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table.__init__': ('queries.html#table.__init__', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table.as_': ('queries.html#table.as_', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table.execute': ('queries.html#table.execute', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table.quoted_name': ('queries.html#table.quoted_name', 'pikaQ/queries.py'),
                               'pikaQ.queries.Table.star': ('queries.html#table.star', 'pikaQ/queries.py'),
                               'pikaQ.queries.UnionQuery': ('queries.html#unionquery', 'pikaQ/queries.py'),
                               'pikaQ.queries.UnionQuery.__init__': ('queries.html#unionquery.__init__', 'pikaQ/queries.py'),
                               'pikaQ.queries.UnionQuery.execute': ('queries.html#unionquery.execute', 'pikaQ/queries.py')},
            'pikaQ.terms': { 'pikaQ.terms.ArithmeticExpression': ('terms.html#arithmeticexpression', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.__init__': ('terms.html#arithmeticexpression.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.execute': ('terms.html#arithmeticexpression.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.left_needs_parens': ( 'terms.html#arithmeticexpression.left_needs_parens',
                                                                                     'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.over': ('terms.html#arithmeticexpression.over', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.right_needs_parens': ( 'terms.html#arithmeticexpression.right_needs_parens',
                                                                                      'pikaQ/terms.py'),
                             'pikaQ.terms.Case': ('terms.html#case', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.__init__': ('terms.html#case.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.check_prev': ('terms.html#case.check_prev', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.else_': ('terms.html#case.else_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.execute': ('terms.html#case.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.when': ('terms.html#case.when', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria': ('terms.html#criteria', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__and__': ('terms.html#criteria.__and__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__init__': ('terms.html#criteria.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__or__': ('terms.html#criteria.__or__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.compose_criteria': ('terms.html#criteria.compose_criteria', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.execute': ('terms.html#criteria.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.negate': ('terms.html#criteria.negate', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.resolve': ('terms.html#criteria.resolve', 'pikaQ/terms.py'),
                             'pikaQ.terms.DelayedFunc': ('terms.html#delayedfunc', 'pikaQ/terms.py'),
                             'pikaQ.terms.DelayedFunc.__init__': ('terms.html#delayedfunc.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.DelayedFunc.execute': ('terms.html#delayedfunc.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.DelayedFunc.over': ('terms.html#delayedfunc.over', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field': ('terms.html#field', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__init__': ('terms.html#field.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.execute': ('terms.html#field.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.quoted_name': ('terms.html#field.quoted_name', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase': ('terms.html#fieldbase', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__add__': ('terms.html#fieldbase.__add__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__eq__': ('terms.html#fieldbase.__eq__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__ge__': ('terms.html#fieldbase.__ge__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__gt__': ('terms.html#fieldbase.__gt__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__le__': ('terms.html#fieldbase.__le__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__lt__': ('terms.html#fieldbase.__lt__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__mul__': ('terms.html#fieldbase.__mul__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__ne__': ('terms.html#fieldbase.__ne__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__radd__': ('terms.html#fieldbase.__radd__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__rmul__': ('terms.html#fieldbase.__rmul__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__rsub__': ('terms.html#fieldbase.__rsub__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__rtruediv__': ('terms.html#fieldbase.__rtruediv__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__sub__': ('terms.html#fieldbase.__sub__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.__truediv__': ('terms.html#fieldbase.__truediv__', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.ilike': ('terms.html#fieldbase.ilike', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.isin': ('terms.html#fieldbase.isin', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.isnull': ('terms.html#fieldbase.isnull', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.like': ('terms.html#fieldbase.like', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.not_ilike': ('terms.html#fieldbase.not_ilike', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.not_like': ('terms.html#fieldbase.not_like', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.notin': ('terms.html#fieldbase.notin', 'pikaQ/terms.py'),
                             'pikaQ.terms.FieldBase.notnull': ('terms.html#fieldbase.notnull', 'pikaQ/terms.py'),
                             'pikaQ.terms.Following': ('terms.html#following', 'pikaQ/terms.py'),
                             'pikaQ.terms.Following.__init__': ('terms.html#following.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Following.execute': ('terms.html#following.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.NullValue': ('terms.html#nullvalue', 'pikaQ/terms.py'),
                             'pikaQ.terms.NullValue.__init__': ('terms.html#nullvalue.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.NullValue.execute': ('terms.html#nullvalue.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause': ('terms.html#overclause', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.__init__': ('terms.html#overclause.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause._check_rows_or_range': ( 'terms.html#overclause._check_rows_or_range',
                                                                              'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause._resolve_over_statement': ( 'terms.html#overclause._resolve_over_statement',
                                                                                 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.as_': ('terms.html#overclause.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.execute': ('terms.html#overclause.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.orderby': ('terms.html#overclause.orderby', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.over': ('terms.html#overclause.over', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.range': ('terms.html#overclause.range', 'pikaQ/terms.py'),
                             'pikaQ.terms.OverClause.rows': ('terms.html#overclause.rows', 'pikaQ/terms.py'),
                             'pikaQ.terms.Preceding': ('terms.html#preceding', 'pikaQ/terms.py'),
                             'pikaQ.terms.Preceding.__init__': ('terms.html#preceding.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Preceding.execute': ('terms.html#preceding.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.Term': ('terms.html#term', 'pikaQ/terms.py'),
                             'pikaQ.terms.Term.__init__': ('terms.html#term.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Term.as_': ('terms.html#term.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Value': ('terms.html#value', 'pikaQ/terms.py'),
                             'pikaQ.terms.Value.__init__': ('terms.html#value.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Value.execute': ('terms.html#value.execute', 'pikaQ/terms.py'),
                             'pikaQ.terms.custom_func': ('terms.html#custom_func', 'pikaQ/terms.py'),
                             'pikaQ.terms.kwargs_func': ('terms.html#kwargs_func', 'pikaQ/terms.py')},
            'pikaQ.utils': { 'pikaQ.utils.delegates': ('utils.html#delegates', 'pikaQ/utils.py'),
                             'pikaQ.utils.execute': ('utils.html#execute', 'pikaQ/utils.py'),
                             'pikaQ.utils.quote_symbol': ('utils.html#quote_symbol', 'pikaQ/utils.py'),
                             'pikaQ.utils.to_sql': ('utils.html#to_sql', 'pikaQ/utils.py')}}}
