"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ConnectionDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTION_TYPE_FIELD_NUMBER: builtins.int
    NETWORK_NAME_FIELD_NUMBER: builtins.int
    connection_type: builtins.str
    network_name: builtins.str
    def __init__(
        self,
        *,
        connection_type: builtins.str = ...,
        network_name: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_network_name", b"_network_name", "network_name", b"network_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_network_name", b"_network_name", "connection_type", b"connection_type", "network_name", b"network_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_name", b"_network_name"]) -> typing_extensions.Literal["network_name"] | None: ...

global___ConnectionDetails = ConnectionDetails

@typing_extensions.final
class Failure(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    code: builtins.str
    reason: builtins.str
    category: builtins.str
    def __init__(
        self,
        *,
        code: builtins.str = ...,
        reason: builtins.str = ...,
        category: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_category", b"_category", "category", b"category"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_category", b"_category", "category", b"category", "code", b"code", "reason", b"reason"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_category", b"_category"]) -> typing_extensions.Literal["category"] | None: ...

global___Failure = Failure

@typing_extensions.final
class BasicUserDetails(google.protobuf.message.Message):
    """Basic User details"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIRST_NAME_FIELD_NUMBER: builtins.int
    MIDDLE_NAME_FIELD_NUMBER: builtins.int
    LAST_NAME_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    MOBILE_NUMBER_FIELD_NUMBER: builtins.int
    first_name: builtins.str
    """First name of the user"""
    middle_name: builtins.str
    """Middle name of the user"""
    last_name: builtins.str
    """Last name of the user"""
    email: builtins.str
    """Email of the user."""
    mobile_number: builtins.str
    """User mobile number"""
    def __init__(
        self,
        *,
        first_name: builtins.str | None = ...,
        middle_name: builtins.str | None = ...,
        last_name: builtins.str | None = ...,
        email: builtins.str | None = ...,
        mobile_number: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_email", b"_email", "_first_name", b"_first_name", "_last_name", b"_last_name", "_middle_name", b"_middle_name", "_mobile_number", b"_mobile_number", "email", b"email", "first_name", b"first_name", "last_name", b"last_name", "middle_name", b"middle_name", "mobile_number", b"mobile_number"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_email", b"_email", "_first_name", b"_first_name", "_last_name", b"_last_name", "_middle_name", b"_middle_name", "_mobile_number", b"_mobile_number", "email", b"email", "first_name", b"first_name", "last_name", b"last_name", "middle_name", b"middle_name", "mobile_number", b"mobile_number"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_email", b"_email"]) -> typing_extensions.Literal["email"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_first_name", b"_first_name"]) -> typing_extensions.Literal["first_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_name", b"_last_name"]) -> typing_extensions.Literal["last_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_middle_name", b"_middle_name"]) -> typing_extensions.Literal["middle_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mobile_number", b"_mobile_number"]) -> typing_extensions.Literal["mobile_number"] | None: ...

global___BasicUserDetails = BasicUserDetails
