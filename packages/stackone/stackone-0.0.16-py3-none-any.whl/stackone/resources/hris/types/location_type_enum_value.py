# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class LocationTypeEnumValue(str, enum.Enum):
    HOME = "home"
    WORK = "work"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        home: typing.Callable[[], T_Result],
        work: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is LocationTypeEnumValue.HOME:
            return home()
        if self is LocationTypeEnumValue.WORK:
            return work()
        if self is LocationTypeEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
