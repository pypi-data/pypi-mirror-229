[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cosimtlk"
description = "Cosimulation toolkit."
authors = [
    { author = "Attila Balint", email = "attila.balint@kuleuven.be" },
]
readme = "README.md"
packages = [{ include = "cosimtlk" }]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "attrs>=23.0.0,<24.0.0",
    "cron_converter>=1.0.0,<2.0.0",
    "FMPy>=0.3.0,<1.0.0",
    "pandas>=1.4.0,<=3.1.0",
    "simpy>=4.0.0,<5.0.0",
    "tqdm>=4.0.0,<5.0.0",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/attila-balint-kul/cosimulation-toolkit"

[project.optional-dependencies]
server = [
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn>=0.20.0,<1.0.0",
    "requests>=2.26.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
]
test = [
    "black==23.7.0",
    "isort==5.12.0",
    "httpx==0.24.1",
    "mypy==1.5.1",
    "ruff==0.0.285",
    "pytest==7.3.2",
    "pytest-cov==4.1.0",
]
dev = [
    "twine>=4.0.0,<5.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]


[tool.hatch.version]
path = "cosimtlk/__version__.py"

[tool.hatch.build]
exclude = [
    ".DS_Store",
]

[tool.hatch.build.targets.sdist]
only-include = [
    "cosimtlk/",
    "tests/",
    "LICENSE",
    "Makefile",
    "README.md",
    "pyproject.toml",
]


[tool.black]
line-length = 99
target-version = ["py310", ]


[tool.ruff]
target-version = "py310"
line-length = 99
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    # "I",  # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Don't touch unused imports

[tool.ruff.isort]
known-first-party = ["cosimtlk"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
python_version = "3.10"
files = ["cosimtlk"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["error"]

[tool.coverage.run]
branch = true
source_pkgs = [
    "cosimtlk",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
