# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ApplicationStatusEnumValue(str, enum.Enum):
    ACTIVE = "active"
    CONVERTED = "converted"
    HIRED = "hired"
    LEAD = "lead"
    REJECTED = "rejected"
    UNMAPPED_VALUE = "unmapped_value"

    def visit(
        self,
        active: typing.Callable[[], T_Result],
        converted: typing.Callable[[], T_Result],
        hired: typing.Callable[[], T_Result],
        lead: typing.Callable[[], T_Result],
        rejected: typing.Callable[[], T_Result],
        unmapped_value: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ApplicationStatusEnumValue.ACTIVE:
            return active()
        if self is ApplicationStatusEnumValue.CONVERTED:
            return converted()
        if self is ApplicationStatusEnumValue.HIRED:
            return hired()
        if self is ApplicationStatusEnumValue.LEAD:
            return lead()
        if self is ApplicationStatusEnumValue.REJECTED:
            return rejected()
        if self is ApplicationStatusEnumValue.UNMAPPED_VALUE:
            return unmapped_value()
