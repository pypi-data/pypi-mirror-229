Metadata-Version: 2.1
Name: pydelling
Version: 1.13
Summary: Package providing a variety of utility methods for mathematical modelling
License: MIT
Author: Aitor
Author-email: aitirga@gmail.com
Requires-Python: >=3.8,<3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Dist: alive-progress
Requires-Dist: charset-normalizer (>=3.1.0,<4.0.0)
Requires-Dist: dill
Requires-Dist: docker
Requires-Dist: h5py
Requires-Dist: matplotlib
Requires-Dist: meshio
Requires-Dist: mkdocs
Requires-Dist: mkdocs-material
Requires-Dist: mkdocstrings
Requires-Dist: mpmath
Requires-Dist: natsort
Requires-Dist: numpy
Requires-Dist: numpy-stl
Requires-Dist: ofpp
Requires-Dist: openpyxl
Requires-Dist: pandas
Requires-Dist: paramiko
Requires-Dist: plotly
Requires-Dist: python-box
Requires-Dist: pyyaml
Requires-Dist: rich
Requires-Dist: rtree
Requires-Dist: scikit-image (>=0.21.0,<0.22.0)
Requires-Dist: scikit-learn
Requires-Dist: scipy
Requires-Dist: seaborn
Requires-Dist: setuptools
Requires-Dist: shapely
Requires-Dist: sklearn
Requires-Dist: streamlit
Requires-Dist: tabulate
Requires-Dist: tqdm
Requires-Dist: trimesh
Requires-Dist: vtk
Requires-Dist: xlrd
Description-Content-Type: text/markdown

 # Pydelling
Set of pre- and post-processing scripts for modelling


## Recommendations

Using and IDE like PyCharm is recommended to keep things easy. It may be useful if you need to debug your scripts,
or edit them.

Using PyCharm, you can follow the installation step and then run your scripts in pydelling env automatically.
Otherwise, you can follow the steps below to run pydelling manually. 


## Installation
Configure the conda environment running

`conda env create --file environment.yaml`

Regular pip dependencies can be found at `requirements.txt`


## Templates and Examples

Some examples of usage of pydelling may be found inside `templates` folder. Use `config.yaml` to setup data sources and 
other variables.


## Running template scripts

In order to execute pydelling, `pydelling` conda env needs to be loaded.


### Loading conda environment

`conda activate pydelling`

### Running script

Run the script and set the config file as argument. If the config file is not specified, `./config.yaml` will be taken as default.

Example: 

`python templates\interpolate_top_BC\interpolate_BC.py templates\interpolate_top_BC\config.yaml`


