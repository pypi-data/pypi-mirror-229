{
  "1": {
    "a": "lambda p: True"
  },
  "2": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: True",
    "i": "lambda p: True"
  },
  "3": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True"
  },
  "4": {
    "a": "lambda p: True"
  },
  "5": {
    "a": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "6": {
    "a": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "7": {
    "a": "lambda p: True"
  },
  "8": {
    "a": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "9": {
    "a": "lambda p: True"
  },
  "10": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: True",
    "i": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "o": "lambda p: True"
  },
  "11": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "12": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "13": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "14": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True"
  },
  "15": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "16": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: True",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "p": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "r": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "s": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "t": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "u": "lambda p: True"
  },
  "17": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "18": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "19": {
    "a": "lambda p: True"
  },
  "20": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "21": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "22": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: True"
  },
  "23": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: True"
  },
  "24": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "25": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "26": {
    "a": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "27": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "28": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "29": {
    "a": "lambda p: True"
  },
  "30": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "31": {
    "a": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "32": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "33": {
    "a": "lambda p: True"
  },
  "34": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "35": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "36": {
    "a": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "37": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "38": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "39": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[1]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "40": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "41": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "42": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "43": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "44": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "45": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "46": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "47": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: True",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "p": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "r": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "s": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "t": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "u": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "v": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "w": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "x": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "y": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "z": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "A": "lambda p: True"
  },
  "48": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: True"
  },
  "49": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: True",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "p": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "r": "lambda p: True"
  },
  "50": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: True"
  },
  "51": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "52": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "53": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "54": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "55": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "56": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.75]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "57": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "58": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "59": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "60": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "61": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True"
  },
  "62": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[1]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "63": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "64": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "65": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "p": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "r": "lambda p: True"
  },
  "66": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "m": "lambda p: True"
  },
  "67": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[1]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "o": "lambda p: True"
  },
  "68": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.75]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "69": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "p": "lambda p: True"
  },
  "70": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "71": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: True",
    "l": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "o": "lambda p: True"
  },
  "72": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: True"
  },
  "73": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "74": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "75": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "76": {
    "a": "lambda p: True"
  },
  "77": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "78": {
    "a": "lambda p: True"
  },
  "79": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "80": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "81": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "82": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "83": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "84": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: True"
  },
  "85": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "86": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "87": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "88": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "89": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "k": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "p": "lambda p: True"
  },
  "90": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "f": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "g": "lambda p: True"
  },
  "91": {
    "a": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.375) < 1e-3",
    "d": "lambda p: True"
  },
  "92": {
    "a": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "b": "lambda p: True"
  },
  "93": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "n": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "o": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "p": "lambda p: True"
  },
  "94": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "e": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "f": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "g": "lambda p: True"
  },
  "95": {
    "a": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.625) < 1e-3",
    "d": "lambda p: True"
  },
  "96": {
    "a": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "b": "lambda p: True"
  },
  "97": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "k": "lambda p: True"
  },
  "98": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "e": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.125]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "99": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "e": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "100": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "d": "lambda p: True"
  },
  "101": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "e": "lambda p: True"
  },
  "102": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "d": "lambda p: True"
  },
  "103": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "104": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "105": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "106": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "107": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "d": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "108": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "d": "lambda p: True"
  },
  "109": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "110": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "111": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "n": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "o": "lambda p: True"
  },
  "112": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[0, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "n": "lambda p: True"
  },
  "113": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "f": "lambda p: True"
  },
  "114": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "115": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "i": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "j": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "116": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "f": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.75) < 1e-3",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "117": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "h": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "i": "lambda p: True"
  },
  "118": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: abs(sum(p[:2]) - 1.5) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "g": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "119": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "h": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "i": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "120": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "i": "lambda p: True"
  },
  "121": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "j": "lambda p: True"
  },
  "122": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.125]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "123": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "k": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "o": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "p": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "r": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "s": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "t": "lambda p: all(abs(p[[1]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "u": "lambda p: True"
  },
  "124": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "n": "lambda p: True"
  },
  "125": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "j": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: abs(sum(p[:2]) - 1.5) < 1e-3",
    "n": "lambda p: True"
  },
  "126": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.5) < 1e-3",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: True"
  },
  "127": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "h": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "i": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "l": "lambda p: True"
  },
  "128": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "h": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "129": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "h": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "i": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "k": "lambda p: True"
  },
  "130": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "g": "lambda p: True"
  },
  "131": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "n": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "o": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "p": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "r": "lambda p: True"
  },
  "132": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "j": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "k": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.25]) + 1e-4) < 1e-3)",
    "n": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "o": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "p": "lambda p: True"
  },
  "133": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.75]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - 0.5) < 1e-3",
    "k": "lambda p: True"
  },
  "134": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "k": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "l": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - 0.75) < 1e-3",
    "m": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "n": "lambda p: True"
  },
  "135": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "h": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "136": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "g": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "k": "lambda p: True"
  },
  "137": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: True",
    "f": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 0.5) < 1e-3",
    "g": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "138": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "h": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "i": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "j": "lambda p: True"
  },
  "139": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "l": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "m": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "n": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "o": "lambda p: True"
  },
  "140": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "i": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "l": "lambda p: abs(abs(p[1] - p[0]) - 0.5) < 1e-3",
    "m": "lambda p: True"
  },
  "141": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.75, 0.125]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "h": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "142": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0.75, 0.375]) + 1e-4) < 1e-3)",
    "f": "lambda p: abs(p[1] - p[0]) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "g": "lambda p: True"
  },
  "143": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "144": {
    "a": "lambda p: True"
  },
  "145": {
    "a": "lambda p: True"
  },
  "146": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "147": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: True"
  },
  "148": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True"
  },
  "149": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "k": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "l": "lambda p: True"
  },
  "150": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "151": {
    "a": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 1./3) < 1e-3",
    "b": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 5./6) < 1e-3",
    "c": "lambda p: True"
  },
  "152": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 1./3]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[1, 2]] - np.array([0, 5./6]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "153": {
    "a": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 2./3) < 1e-3",
    "b": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 1./6) < 1e-3",
    "c": "lambda p: True"
  },
  "154": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 2./3]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[1, 2]] - np.array([0, 1./6]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "155": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "156": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "d": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "e": "lambda p: True"
  },
  "157": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "158": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "159": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "160": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "c": "lambda p: True"
  },
  "161": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: True"
  },
  "162": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "j": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "k": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "163": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "g": "lambda p: True",
    "h": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "i": "lambda p: True"
  },
  "164": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "j": "lambda p: True"
  },
  "165": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "166": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "i": "lambda p: True"
  },
  "167": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "168": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "169": {
    "a": "lambda p: True"
  },
  "170": {
    "a": "lambda p: True"
  },
  "171": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "172": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "173": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "174": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "175": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "176": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "g": "lambda p: True",
    "h": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "177": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "m": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "n": "lambda p: True"
  },
  "178": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "c": "lambda p: True"
  },
  "179": {
    "a": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.75) < 1e-3",
    "c": "lambda p: True"
  },
  "180": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "j": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.5) < 1e-3",
    "k": "lambda p: True"
  },
  "181": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "j": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.5) < 1e-3",
    "k": "lambda p: True"
  },
  "182": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "i": "lambda p: True"
  },
  "183": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "e": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "f": "lambda p: True"
  },
  "184": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "185": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "d": "lambda p: True"
  },
  "186": {
    "a": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "b": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "c": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "d": "lambda p: True"
  },
  "187": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "k": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "l": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "m": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "n": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "o": "lambda p: True"
  },
  "188": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([2./3, 1./3]) + 1e-4) < 1e-3)",
    "j": "lambda p: abs(sum(p[:2]) - 1.0) < 1e-3",
    "k": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "189": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "190": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "191": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3",
    "m": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3",
    "n": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "o": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3",
    "p": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "q": "lambda p: all(abs(p[[2]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "r": "lambda p: True"
  },
  "192": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: True",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[0, 1]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "l": "lambda p: all(abs(p[[2]] - np.array([0]) + 1e-4) < 1e-3)",
    "m": "lambda p: True"
  },
  "193": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "i": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - round(p[2])) < 1e-3",
    "j": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[1]] - np.array([0]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "194": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[0, 1]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[0, 1]] - np.array([1./3, 2./3]) + 1e-4) < 1e-3)",
    "g": "lambda p: True",
    "h": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3 and abs(p[2] - 0.25) < 1e-3",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[2]] - np.array([0.25]) + 1e-4) < 1e-3)",
    "k": "lambda p: (abs(p[1] - 2*p[0]) + 1e-4) % 1 < 1e-3",
    "l": "lambda p: True"
  },
  "195": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "196": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "197": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: True"
  },
  "198": {
    "a": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "b": "lambda p: True"
  },
  "199": {
    "a": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "b": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "c": "lambda p: True"
  },
  "200": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "j": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "201": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "202": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "203": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: True"
  },
  "204": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "205": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: True"
  },
  "206": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "207": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - round(p[0])) < 1e-3",
    "j": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - 0.5) < 1e-3",
    "k": "lambda p: True"
  },
  "208": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "j": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "k": "lambda p: abs(sum(p[1:]) - 1.5) < 1e-3 and abs(p[0] - 0.25) < 1e-3",
    "l": "lambda p: abs(abs(p[2] - p[1]) - 0.5) < 1e-3 and abs(p[0] - 0.25) < 1e-3",
    "m": "lambda p: True"
  },
  "209": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - round(p[0])) < 1e-3",
    "h": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - 0.5) < 1e-3",
    "i": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "210": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(sum(p[1:]) - 1.25) < 1e-3 and abs(p[0] - 0.125) < 1e-3",
    "h": "lambda p: True"
  },
  "211": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - round(p[0])) < 1e-3",
    "i": "lambda p: abs(sum(p[1:]) - 1.5) < 1e-3 and abs(p[0] - 0.25) < 1e-3",
    "j": "lambda p: True"
  },
  "212": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: abs(sum(p[1:]) - 1.25) < 1e-3 and abs(p[0] - 0.125) < 1e-3",
    "e": "lambda p: True"
  },
  "213": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: (abs(abs(p[2] + 1 - p[1]) - 0.25) < 1e-3 or abs(abs(p[2] - p[1]) - 0.25) < 1e-3) and abs(p[0] - 0.125) < 1e-3",
    "e": "lambda p: True"
  },
  "214": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: (abs(abs(p[2] + 1 - p[1]) - 0.25) < 1e-3 or abs(abs(p[2] - p[1]) - 0.25) < 1e-3) and abs(p[0] - 0.125) < 1e-3",
    "h": "lambda p: abs(sum(p[1:]) - 1.25) < 1e-3 and abs(p[0] - 0.125) < 1e-3",
    "i": "lambda p: True"
  },
  "215": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "j": "lambda p: True"
  },
  "216": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "i": "lambda p: True"
  },
  "217": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "h": "lambda p: True"
  },
  "218": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "i": "lambda p: True"
  },
  "219": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: True"
  },
  "220": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "d": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "e": "lambda p: True"
  },
  "221": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - round(p[0])) < 1e-3",
    "j": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - 0.5) < 1e-3",
    "k": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "l": "lambda p: all(abs(p[[0]] - np.array([0.5]) + 1e-4) < 1e-3)",
    "m": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "n": "lambda p: True"
  },
  "222": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - 0.5) < 1e-3",
    "i": "lambda p: True"
  },
  "223": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: True",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "j": "lambda p: abs(abs(p[2] - p[1]) - 0.5) < 1e-3 and abs(p[0] - 0.25) < 1e-3",
    "k": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "l": "lambda p: True"
  },
  "224": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: True",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0]) + 1e-4) < 1e-3)",
    "i": "lambda p: abs(abs(p[2] - p[1]) - 0.5) < 1e-3 and abs(p[0] - 0.75) < 1e-3",
    "j": "lambda p: abs(sum(p[1:]) - 1.5) < 1e-3 and abs(p[0] - 0.75) < 1e-3",
    "k": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "l": "lambda p: True"
  },
  "225": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - round(p[0])) < 1e-3",
    "i": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - 0.5) < 1e-3",
    "j": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "l": "lambda p: True"
  },
  "226": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - 0.25) < 1e-3",
    "i": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "j": "lambda p: True"
  },
  "227": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.25, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "h": "lambda p: abs(sum(p[1:]) - 1.25) < 1e-3 and abs(p[0] - 0.125) < 1e-3",
    "i": "lambda p: True"
  },
  "228": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0.5, 0.5]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(sum(p[1:]) - 1.75) < 1e-3 and abs(p[0] - 0.625) < 1e-3",
    "h": "lambda p: True"
  },
  "229": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0]) + 1e-4) < 1e-3)",
    "f": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "g": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.5]) + 1e-4) < 1e-3)",
    "h": "lambda p: abs(p[1] - p[2]) < 1e-3 and abs(p[0] - round(p[0])) < 1e-3",
    "i": "lambda p: abs(sum(p[1:]) - 1.5) < 1e-3 and abs(p[0] - 0.25) < 1e-3",
    "j": "lambda p: all(abs(p[[0]] - np.array([0]) + 1e-4) < 1e-3)",
    "k": "lambda p: abs(p[1] - p[0]) < 1e-3",
    "l": "lambda p: True"
  },
  "230": {
    "a": "lambda p: True",
    "b": "lambda p: True",
    "c": "lambda p: True",
    "d": "lambda p: True",
    "e": "lambda p: all(abs(p - p[0]) < 1e-3)",
    "f": "lambda p: all(abs(p[[1, 2]] - np.array([0, 0.25]) + 1e-4) < 1e-3)",
    "g": "lambda p: abs(sum(p[1:]) - 1.25) < 1e-3 and abs(p[0] - 0.125) < 1e-3",
    "h": "lambda p: True"
  }
}
