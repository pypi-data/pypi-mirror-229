[tool.poetry]
name = "taskiq-pipelines"
version = "0.1.1"
description = "Taskiq pipelines for task chaining."
authors = ["Pavel Kirilin <win10@list.ru>"]
readme = "README.md"
repository = "https://github.com/taskiq-python/taskiq-pipelines"
license = "LICENSE"
classifiers = [
    "Typing :: Typed",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: System :: Networking",
    "Development Status :: 3 - Alpha",
]
homepage = "https://github.com/taskiq-python/taskiq-pipelines"
keywords = ["taskiq", "pipelines", "tasks", "distributed", "async"]

[tool.poetry.dependencies]
python = "^3.8.1"
taskiq = ">=0.0.8, <1"
typing-extensions = "^4.3.0"
pydantic = "^2"

[tool.poetry.dev-dependencies]
pytest = "^7"
flake8 = "^6"
black = { version = "^22.6.0", allow-prereleases = true }
autoflake = "^1.4"
pytest-cov = "^3.0.0"
anyio = "^3.6.1"
pre-commit = "^2.20.0"
isort = "^5.10.1"
yesqa = "^1.4.0"
wemake-python-styleguide = "^0.18"
mypy = "^1"
pytest-xdist = { version = "^2.5.0", extras = ["psutil"] }

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = false
warn_unused_ignores = false

[tool.isort]
profile = "black"
multi_line_output = 3

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
