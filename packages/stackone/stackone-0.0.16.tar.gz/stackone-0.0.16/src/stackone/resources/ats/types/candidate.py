# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .candidate_email import CandidateEmail
from .social_link import SocialLink


class Candidate(pydantic.BaseModel):
    id: str
    name: str
    first_name: str
    last_name: str
    email: str
    emails: typing.List[CandidateEmail]
    social_links: typing.List[SocialLink]
    phone: typing.Optional[str]
    company: typing.Optional[str]
    title: str
    application_ids: typing.Optional[typing.List[str]]
    created_at: dt.datetime
    updated_at: dt.datetime

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
