"""Add ACR to LoginSession and AuthorizationCode

Revision ID: 676305863b8f
Revises: 09c1ea32f752
Create Date: 2023-06-22 11:25:37.354818

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import fief

# revision identifiers, used by Alembic.
revision = "676305863b8f"
down_revision = "09c1ea32f752"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    if connection.dialect.name == "postgresql":
        acr_enum = postgresql.ENUM("0", "1", name="acr", create_type=False)
        acr_enum.create(connection, checkfirst=True)
    else:
        acr_enum = sa.Enum("0", "1", name="acr")

    op.add_column("fief_authorization_codes", sa.Column("acr", acr_enum, nullable=True))
    op.add_column("fief_login_sessions", sa.Column("acr", acr_enum, nullable=True))

    op.execute("UPDATE fief_authorization_codes SET acr = '0'")
    op.execute("UPDATE fief_login_sessions SET acr = '0'")

    connection = op.get_bind()
    if connection.dialect.name == "sqlite":
        with op.batch_alter_table("fief_authorization_codes") as batch_op:
            batch_op.alter_column(
                "acr", existing_nullable=True, nullable=False, existing_type=acr_enum
            )
        with op.batch_alter_table("fief_login_sessions") as batch_op:
            batch_op.alter_column(
                "acr", existing_nullable=True, nullable=False, existing_type=acr_enum
            )
    else:
        op.alter_column(
            "fief_authorization_codes",
            "acr",
            existing_nullable=True,
            nullable=False,
            existing_type=acr_enum,
        )
        op.alter_column(
            "fief_login_sessions",
            "acr",
            existing_nullable=True,
            nullable=False,
            existing_type=acr_enum,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("fief_login_sessions", "acr")
    op.drop_column("fief_authorization_codes", "acr")

    try:
        acr_enum = postgresql.ENUM("0", "1", name="acr", create_type=False)
        acr_enum.drop(op.get_bind(), checkfirst=True)
    except AttributeError:
        pass
    # ### end Alembic commands ###
