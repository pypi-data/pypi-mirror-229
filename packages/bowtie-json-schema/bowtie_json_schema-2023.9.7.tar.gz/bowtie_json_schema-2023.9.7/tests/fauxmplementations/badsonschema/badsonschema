#!/usr/bin/env python3
"""
A bowtie runner which always gets the wrong answer.
"""
from dataclasses import dataclass
import io
import json
import sys


@dataclass
class Runner:
    _started: bool = False
    _stdout: io.TextIOWrapper = sys.stdout
    _stderr: io.TextIOWrapper = sys.stderr

    def run(self, stdin=sys.stdin):
        for line in stdin:
            each = json.loads(line)
            cmd = each.pop("cmd")
            response = getattr(self, f"cmd_{cmd}")(**each)
            self._stdout.write(f"{json.dumps(response)}\n")
            self._stdout.flush()

    def cmd_start(self, version):
        assert version == 1

        self._started = True
        return dict(
            ready=True,
            version=1,
            implementation=dict(
                language="python",
                name="badsonschema",
                issues="https://github.com/bowtie-json-schema/bowtie/issues",
                dialects=[
                    "https://json-schema.org/draft/2020-12/schema",
                    "https://json-schema.org/draft/2019-09/schema",
                    "http://json-schema.org/draft-07/schema#",
                    "http://json-schema.org/draft-06/schema#",
                    "http://json-schema.org/draft-04/schema#",
                    "http://json-schema.org/draft-03/schema#",
                ],
            ),
        )

    def cmd_dialect(self, dialect):
        assert self._started, "Not started!"
        return dict(ok=True)

    def cmd_run(self, case, seq):
        assert self._started, "Not started!"

        results = [
            {"valid": not test.get("valid", True)} for test in case["tests"]
        ]
        return dict(seq=seq, results=results)

    def cmd_stop(self):
        assert self._started, "Not started!"

        sys.exit(0)


Runner().run()
